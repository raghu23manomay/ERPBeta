@model XRP.Models.ssmtbl_FeasibilityModel
@{
                /**/

                ViewBag.Title = "Feasibility";
                ViewBag.Active = "Marketing";
                Layout = "~/Views/Shared/_DesignLayout.cshtml";
}
<link href="~/Content/Validations/jquery-ui.css" rel="stylesheet" />

@using (Html.BeginForm("CreateFeasibility", "Feasibility", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)

    <div class="paddingTop15">

        <div class="@ViewBag.HideClass" style="text-align:center; display:none">
            @ViewBag.Message
        </div>
        @Html.HiddenFor(model => model.InquiryNo)
        @Html.HiddenFor(model => model.FeasibilityId)
        @Html.HiddenFor(model => model.FeasibilityToolingRequirement)
        @Html.HiddenFor(model => model.Section, new { @id = "hdnSection" })
        <input type="hidden" id="hdnSection1"/>  

        <div class="row">
            <div class="col-md-12">

                <div class="ibox">
                    <div class="ibox-title">
                        <h5>Feasibility</h5>
                    </div>
                    <div class="ibox-content">


                        <div class="row">
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.FeasibilityConditionSupply, new { @class = "Label" })
                                @Html.DropDownListFor(model => model.FeasibilityConditionSupply, ViewData["FeasibilityCOS"] as IEnumerable<SelectListItem>
                            ,
                            XRP.Global.DropDownSelection.DropDownSelect, new { @class = ".chzn-select form-control r-0 light s-12" })
                                @Html.ValidationMessageFor(model => model.FeasibilityConditionSupply, null, new { @class = "alert-danger" })

                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.FeasibilityTypeofJob, new { @class = "Label" })

                                @Html.DropDownListFor(model => model.FeasibilityTypeofJob, ViewData["FeasibilityTOJ"] as IEnumerable<SelectListItem>
                            ,
                            XRP.Global.DropDownSelection.DropDownSelect, new { @class = ".chzn-select form-control r-0 light s-12" })
                                @Html.ValidationMessageFor(model => model.FeasibilityTypeofJob, null, new { @class = "alert-danger" })
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.FeasibilityNatureofWork, new { @class = "Label" })

                                @Html.DropDownListFor(model => model.FeasibilityNatureofWork, ViewData["FeasibilityNOW"] as IEnumerable<SelectListItem>
                            ,
                            XRP.Global.DropDownSelection.DropDownSelect, new { @class = ".chzn-select form-control r-0 light s-12" })
                                @Html.ValidationMessageFor(model => model.FeasibilityNatureofWork, null, new { @class = "alert-danger" })

                            </div>
                        </div>
                        <div class="row ">
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.FeasibilityHammerRequired, new { @class = "Label" })
                                @Html.DropDownListFor(model => model.FeasibilityHammerRequired, ViewData["FeasibilityHR"] as IEnumerable<SelectListItem>
                            ,
                            XRP.Global.DropDownSelection.DropDownSelect, new { @class = ".chzn-select form-control r-0 light s-12" })
                                @Html.ValidationMessageFor(model => model.FeasibilityHammerRequired, null, new { @class = "alert-danger" })
                            </div>
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.FeasibilityToolingRequirement, new { @class = "Label" })
                                <br>
                                <div class="">
                                    <input type="radio" id="Insert" name="FeasibilityToolingRequirement" class="custom-control-input">
                                    <label class="custom-control-label m-0" for="Insert">Insert</label>
                                </div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" id="DieBlock" name="FeasibilityToolingRequirement" class="custom-control-input">
                                    <label class="custom-control-label m-0" for="DieBlock">Die Block</label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="custom-control custom-radio custom-control-inline">
                                    <div class="col-md-3 DivInsert" style="display: none;">
                                        @Html.Label("Dia", new { style = "display: none;", @id = "Dia", @class = "Label" })<br />
                                        @Html.TextBoxFor(model => model.fisdiavalue, new { @class = "form-control r-0 light s-12", style = "display: none;", onchange = "getDieDescriptionValue();" }) @*Insert*@
                                    </div>
                                    <div class="col-md-3 DivInsert" style="display: none;">
                                        @Html.Label("Length", new { style = "display: none;", @id = "Length", @class = "Label" })<br />
                                        @Html.TextBoxFor(model => model.fisdialength, new { @class = "form-control r-0 light s-12", style = "display: none;", onchange = "getDieDescriptionValue();" }) @*Insert*@
                                    </div>

                                    <div class="col-md-3 DivDieBlock" style="display: none;">
                                        @Html.Label("Length", new { style = "display: none;", @id = "DieLength", @class = "Label" })<br />
                                        @Html.TextBoxFor(model => model.fisdiablocklength, new { @class = "form-control r-0 light s-12", style = "display: none;", onchange = "getDieDescriptionValue();" }) @*Die Block*@
                                    </div>
                                    <div class="col-md-3 DivDieBlock" style="display: none;">
                                        @Html.Label("Width", new { style = "display: none;", @id = "Width", @class = "Label" })<br />
                                        @Html.TextBoxFor(model => model.fisdiablockwidth, new { @class = "form-control r-0 light s-12", style = "display: none;", onchange = "getDieDescriptionValue();" }) @*Die Block*@
                                    </div>
                                    <div class="col-md-3 DivDieBlock" style="display: none;">
                                        @Html.Label("Height", new { style = "display: none;", @id = "Height", @class = "Label" })<br />
                                        @Html.TextBoxFor(model => model.fisdiablockheight, new { @class = "form-control r-0 light s-12", style = "display: none;", onchange = "getDieDescriptionValue();" }) @*Die Block*@
                                    </div>
                                    <div class="col-md-6 DivTotal" style="display: none;">
                                        @Html.Label("Aprrox Wt(Kg)", new { @id = "Total", @class = "Label" })<br />
                                        @Html.LabelFor(model => model.fisdiatotal, new { id = "fisdiatotal" })
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-md-4">
                                <div id="div_oprinvtag">
                                    @Html.Label("Operations Involved", new { @class = "Label" })
                                    <select class="select2" name="OperationsInvolved[]" multiple="multiple" id="mySelect2" data-placeholder="Select Operation Involved" dir="ltr">
                                        @for (int i = 0; i < Model.ssmtbl_Feasibility_OperationsInvolvedModel.Count; i++)
                                        {
                                            <option value="@Model.ssmtbl_Feasibility_OperationsInvolvedModel[i].Operations_Involved" class="form-control r-0 light s-12">

                                                @Model.ssmtbl_Feasibility_OperationsInvolvedModel[i].Operations_Involved_Text
                                            </option>
                                        }
                                    </select>
                                </div>
                                <div id="div_oprinvlabel">
                                    @Html.Label("Operations Involved", new { @class = "Label" })
                                    <p class="mosurhandsymbol"><span id="spn_opinvtaglist" onclick="javascript:OprInvHidewShow();"></span></p>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div id="div_rmttag">
                                    @Html.Label("Raw Material Test", new { @class = "Label" })
                                    <select class="select2" name="RawMaterialTest[]" multiple="multiple" data-placeholder="Select Raw Material Test" id="drp_rmt">
                                        @for (int i = 0; i < Model.ssmtbl_Feasibility_RawMaterialTestModel.Count; i++)
                                        {
                                            <option value="@Model.ssmtbl_Feasibility_RawMaterialTestModel[i].Raw_Material_Test" class="form-control r-0 light s-12">
                                                @Model.ssmtbl_Feasibility_RawMaterialTestModel[i].Raw_Material_Test_Text
                                            </option>
                                        }
                                    </select>
                                </div>
                                <div id="div_rmtlist">
                                    @Html.Label("Raw Material Test", new { @class = "Label" })
                                    <p class="mosurhandsymbol"><span id="spn_rmtlist" onclick="javascript:RmtHidewShow();"></span></p>
                                </div>
                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.DieDescription, new { @class = "Label" })
                                @Html.TextBoxFor(model => model.DieDescription, null, new { @class = "form-control r-0 light s-12", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.DieDescription, null, new { @class = "alert-danger" })
                            </div>
                        </div>
                        <div class="row ">
                            <div class="col-md-4">
                                @Html.Label("Raw Material Section", new { @class = "Label" })
                                @Html.DropDownListFor(model => model.Section, ViewData["Section"] as IEnumerable<SelectListItem>
                                ,
                                   XRP.Global.DropDownSelection.DropDownSelect,
                                   new { @class = ".chzn-select form-control r-0 light s-12", @id = "Section", @onchange = "CalculateCutLength(this)" })

                                @Html.ValidationMessageFor(model => model.Section, null, new { @class = "alert-danger" })
                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.netweight, new { @class = "Label" })

                                @Html.TextBoxFor(model => model.netweight, null, new { @class = "form-control r-0 light s-12" })
                                @Html.ValidationMessageFor(model => model.netweight, null, new { @class = "alert-danger" })
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.cutweight, new { @class = "Label" })
                                @Html.TextBoxFor(model => model.cutweight, null, new { @class = "form-control r-0 light s-12", @oninput = "CalculateCutLengthctwt()", @id = "cutWeight" })
                                @Html.ValidationMessageFor(model => model.cutweight, null, new { @class = "alert-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.grossweight, new { @class = "Label" })
                                @Html.TextBoxFor(model => model.grossweight, null, new { @class = "form-control r-0 light s-12" })
                                @Html.ValidationMessageFor(model => model.grossweight, null, new { @class = "alert-danger" })

                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.cutlength, new { @class = "Label" })
                                @Html.TextBoxFor(model => model.cutlength, null, new { @class = "form-control r-0 light s-12", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.cutlength, null, new { @class = "alert-danger" })

                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.materialweights, new { @class = "Label" })
                                @Html.TextBoxFor(model => model.materialweights, null, new { @class = "form-control r-0 light s-12" })
                                @Html.ValidationMessageFor(model => model.materialweights, null, new { @class = "alert-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.FeasibilityHeattreatment, new { @class = "Label" })
                                @Html.DropDownListFor(model => model.FeasibilityHeattreatment, ViewData["FeasibilityHT"] as IEnumerable<SelectListItem>
                            ,
                            XRP.Global.DropDownSelection.DropDownSelect, new { @class = ".chzn-select form-control r-0 light s-12" })
                                @Html.ValidationMessageFor(model => model.FeasibilityHeattreatment, null, new { @class = "alert-danger" })
                            </div>



                            <div class="col-md-4">
                                <div id="div_pvtag">
                                    @Html.LabelFor(model => model.MillTC, new { @class = "Label" })

                                    <input type="text" class="form-control r-0 light s-12" id="txtpreferedvendor" value="" onchange="preferedvendorfocusout()" />

                                </div>
                                <div id="div_pvlist">
                                    @Html.LabelFor(model => model.MillTC, new { @class = "Label" })
                                    <p class="mosurhandsymbol"><span id="spn_pv" onclick="javascript:PrefvHidewShow();"></span></p>
                                </div>

                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.FeasibilityMaterialGrade, new { @class = "Label" })
                                @Html.DropDownListFor(model => model.FeasibilityMaterialGrade, ViewData["FeasibilityMG"] as IEnumerable<SelectListItem>
                            ,
                            XRP.Global.DropDownSelection.DropDownSelect, new { @class = ".chzn-select form-control r-0 light s-12" })
                                @Html.ValidationMessageFor(model => model.FeasibilityMaterialGrade, null, new { @class = "alert-danger" })

                            </div>


                        </div>
                        <div class="row ">

                            <div class="col-md-4">

                                @Html.LabelFor(model => model.FeasibilityLubricantPreferred, new { @class = "Label" })
                                @Html.DropDownListFor(model => model.FeasibilityLubricantPreferred, ViewData["FeasibilityLP"] as IEnumerable<SelectListItem>
                            ,
                            XRP.Global.DropDownSelection.DropDownSelect, new { @class = ".chzn-select form-control r-0 light s-12" })
                                @Html.ValidationMessageFor(model => model.FeasibilityLubricantPreferred, null, new { @class = "alert-danger" })

                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.Feasibilitystandardapplicable, new { @class = "Label" })
                                @Html.DropDownListFor(model => model.Feasibilitystandardapplicable, ViewData["FeasibilitySA"] as IEnumerable<SelectListItem>
                            ,
                            XRP.Global.DropDownSelection.DropDownSelect, new { @class = ".chzn-select form-control r-0 light s-12" })
                                @Html.ValidationMessageFor(model => model.Feasibilitystandardapplicable, null, new { @class = "alert-danger" })

                            </div>
                            <div class="col-md-4">
                                @Html.Label("Heat Treatment Hardness", new { @class = "Label" })
                                <br>
                                <div class="custom-control-inline">
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(model => model.hardnessmin, new { @class = "form-control r-0 light s-12", @placeholder = "Min" }) @*Die Block*@
                                    </div>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(model => model.hardnessmax, new { @class = "form-control r-0 light s-12", @placeholder = "Max" }) @*Die Block*@
                                    </div>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(model => model.hardnessunits, new { @class = "form-control r-0 light s-12", @placeholder = "Units" }) @*Die Block*@
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row ">
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.micro, new { @class = "Label" })
                                @Html.TextAreaFor(model => model.micro, new { @class = "form-control r-0 light s-12" })
                                @Html.ValidationMessageFor(model => model.micro, null, new { @class = "alert-danger" })
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.FeasibilityStatutoryandregulatoryrequirement, new { @class = "Label" })
                                @Html.TextAreaFor(model => model.FeasibilityStatutoryandregulatoryrequirement, new { @class = "form-control r-0 light s-12" })
                                @Html.ValidationMessageFor(model => model.FeasibilityStatutoryandregulatoryrequirement, null, new { @class = "alert-danger" })
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.FeasibilityRemark, new { @class = "Label" })
                                @Html.TextAreaFor(model => model.FeasibilityRemark, new { @class = "form-control r-0 light s-12" })
                                @Html.ValidationMessageFor(model => model.FeasibilityRemark, null, new { @class = "alert-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <span id="spnprefvendorlist">Prefered Vendor List:</span>&nbsp;<br />
                                <label id="lbl_preferedvendorlist"></label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="card-body" align="right" id="divSaveBtn" style="display:none">
                                    <button type="button" class="btn btn-primary btn-sm" value="Save" id="btn_Save" onclick="return submitFeasiblity(this.value);"><i class="icon-save mr-2"></i>Save</button>
                                    <button type="reset" class="btn btn-sm" id="Reset"><i class="icon-refresh mr-2"></i>Reset</button>
                                </div>
                                <div class="card-body" align="right" id="divUpdateBtn" style="display:none">
                                    <button type="button" class="btn btn-primary" value="Update" id="btn_Save" onclick="return submitFeasiblity(this.value);"><i class="icon-pencil mr-2"></i>Update</button>
                                </div>
                            </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            </div> 

        <script type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script> 
        <script src="~/Scripts/jquery-1.10.2.min.js"></script> 
        <script src="~/Content/Validations/JqueryUi.js"></script>
        <script>
            var pfv = "";
            function preferedvendorfocusout() {
                var ispresent = pfv.indexOf($("#txtpreferedvendor").val()) > -1;

                if (ispresent) {

                }
                else {
                    pfv = pfv + ($("#txtpreferedvendor").val()) + ',';
                    $("#lbl_preferedvendorlist").text(pfv);

                }

                $("#txtpreferedvendor").val("");
            }
            function CalculateCutLengthctwt() {
               
                var section = ($("#Section option:selected").text());
                var cutwt = $("#cutWeight").val();
                cutwt = cutwt == 0 ? 1 : $("#cutWeight").val(); 
            
                var secSplit = section.split(" ")[0]; 
                if (section.split(" ")[1] == "Dia") {
                    var dia = section.split(" ")[0];

                    var cutLength = parseFloat((cutwt * 4 / (Math.PI * dia * dia * 0.00000785))).toFixed(2);
                    $('#cutlength').val(cutLength);
                } else {
                    var rcs = section.split(" ")[0];
                    var cutLength = parseFloat(cutwt / (rcs * rcs * 0.00000785)).toFixed(2);
                    $('#cutlength').val(cutLength);
                }
            }
        </script>
        <script>
            function CalculateCutLength(Section) { 
                var cutwt = $("#cutWeight").val();
                cutwt = cutwt == 0 ? 1 : $("#cutWeight").val();

                var section = Section.options[Section.selectedIndex].innerHTML;
                $("#hdnSection1").val(section);
                var secSplit = section.split(" ")[0];
                if (section.split(" ")[1] == "Dia") {
                    var dia = section.split(" ")[0];

                    var cutLength = parseFloat((cutwt * 4 / (Math.PI * dia * dia * 0.00000785))).toFixed(2);
                    $('#cutlength').val(cutLength);
                } else {
                    var rcs = section.split(" ")[0];
                    var cutLength = (cutwt / (rcs * rcs * 0.00000785));
                    $('#cutlength').val(cutLength.toFixed(2));
                } 
            } 
        </script>
        <script>
            function submitFeasiblity(val) {
                unsaved = false;

                var feasibilityId = document.getElementById('FeasibilityId').value;
                var status = feasibilityId;
               
                var InquiryNo = document.getElementById('InquiryNo').value;
                var feasibilityConditionSupply = document.getElementById('FeasibilityConditionSupply').value;
                if (feasibilityConditionSupply == "") {
                    alert("Please Select Condition of Supply !");
                    return false;
                }
                var feasibilityTypeofJob = document.getElementById('FeasibilityTypeofJob').value;
                if (feasibilityTypeofJob == "") {
                    alert("Please Select Type Of Job !");
                    return false;
                }
                var feasibilityNatureofWork = document.getElementById('FeasibilityNatureofWork').value;
                if (feasibilityNatureofWork == "") {
                    alert("Please Select Feasibility Nature of Work!");
                    return false;
                }
                var feasibilityHammerRequired = document.getElementById('FeasibilityHammerRequired').value;
                if (feasibilityHammerRequired == "") {
                    alert("Please Select Feasibility Hammer Required!");
                    return false;
                }
                if ((document.getElementById('Insert').checked) || (document.getElementById('DieBlock').checked)) {

                }
                else {
                    alert("Please Select Tooling Requirement !");
                    return false;
                }
                if (document.getElementById('Insert').checked) {
                    var feasibilityToolingRequirement = 'Insert';
                    var fisdialength = document.getElementById('fisdialength').value;
                    if (fisdialength == "") {
                        alert("Please Enter Fisibility Dia Length!");
                        return false;
                    }
                    var fisdiavalue = document.getElementById('fisdiavalue').value;
                    if (fisdiavalue == "") {
                        alert("Please Enter Fisibility Dia Value!");
                        return false;
                    }
                    var fisdiatotal = $('#fisdiatotal').text();

                } else {
                    var feasibilityToolingRequirement = 'Die Block';
                    var fisdiablocklength = document.getElementById('fisdiablocklength').value;
                    if (fisdiablocklength == "") {
                        alert("Please Enter Dia Block Length!");
                        return false;
                    }
                    var fisdiablockwidth = document.getElementById('fisdiablockwidth').value;
                    if (fisdiablockheight == "") {
                        alert("Please Enter Dia Block Width!");
                        return false;
                    }
                    var fisdiablockheight = document.getElementById('fisdiablockheight').value;
                    if (fisdiablockheight == "") {
                        alert("Please Enter Dia Block Height!");
                        return false;
                    }
                    var fisdiatotal = $('#fisdiatotal').text();

                }
                //var millTC = document.getElementById('MillTC').value;
                var dieDescription = document.getElementById('DieDescription').value;

                var operationinv = document.getElementById('mySelect2').value;

                if (operationinv == "" && val != "Update") {
                    alert("Please Select Operation Involved!");
                    return false;
                } else if (operationinv == "" && $("#spn_opinvtaglist").text() == "" && val == "Update") {
                    alert("Please Select Operation Involved!");
                    return false;
                }

                var rmtest = document.getElementById('drp_rmt').value;
                if (rmtest == "" && val != "Update") {
                    alert("Please Select Raw Material Test!");
                    return false;
                } else if (rmtest == "" && $("#spn_rmtlist").text() == "" && val == "Update") {
                    alert("Please Select Raw Material Test!");
                    return false;
                }

                var section = document.getElementById('Section').value;
                if (section == "") {
                    alert("Please Select Section!");
                    return false;
                }
                var netweight = document.getElementById('netweight').value;
                if (netweight == "") {
                    alert("Please Enter Net Weight!");
                    return false;
                }
                var cutWeight = document.getElementById('cutWeight').value;
                if (cutWeight == "") {
                    alert("Please Enter Cut Weight!");
                    return false;
                }
                var grossweight = document.getElementById('grossweight').value;
                if (grossweight == "") {
                    alert("Please Enter Gross Weight!");
                    return false;
                }
                var cutlength = document.getElementById('cutlength').value;
                if (cutlength == "") {
                    alert("Please Enter Cut Length!");
                    return false;
                }
                var materialweights = document.getElementById('materialweights').value;
                if (materialweights == "") {
                    alert("Please Enter Machined Weight!");
                    return false;
                }
                var FeasibilityHeattreatment = document.getElementById('FeasibilityHeattreatment').value;
                if (FeasibilityHeattreatment == "") {
                    alert("Please Select Heat Treatment!");
                    return false;
                }
                var FeasibilityMaterialGrade = document.getElementById('FeasibilityMaterialGrade').value;
                if (FeasibilityMaterialGrade == "") {
                    alert("Please Enter Grade OF Material!");
                    return false;
                }

                var FeasibilityLubricantPreferred = document.getElementById('FeasibilityLubricantPreferred').value;
                if (FeasibilityLubricantPreferred == "") {
                    alert("Please Select Lubricant Preferred!");
                    return false;
                }
                var Feasibilitystandardapplicable = document.getElementById('Feasibilitystandardapplicable').value;
                if (Feasibilitystandardapplicable == "") {
                    alert("Please Select  Standard Applicable!");
                    return false;
                }
                var hardnessmin = document.getElementById('hardnessmin').value;
                if (hardnessmin == "") {
                    alert("Please Enter Heat Treatment Hardness Minimum!");
                    return false;
                }
                var hardnessmax = document.getElementById('hardnessmax').value;
                if (hardnessmax == "") {
                    alert("Please Enter Heat Treatment Hardness Maximum!");
                    return false;
                }
                var hardnessunits = document.getElementById('hardnessunits').value;
                if (hardnessunits == "") {
                    alert("Please Enter Heat Treatment Hardness Units!");
                    return false;
                }
                var micro = document.getElementById('micro').value;

                var FeasibilityStatutoryandregulatoryrequirement = document.getElementById('FeasibilityStatutoryandregulatoryrequirement').value;
                var FeasibilityRemark = document.getElementById('FeasibilityRemark').value;
                var millTC = $("#lbl_preferedvendorlist").text();
                  
                var objfea = [];
                var feas = [];
                feas = {
                    FeasibilityId: ' ' + feasibilityId + '', InquiryNo: ' ' + InquiryNo + '', FeasibilityConditionSupply: ' ' + feasibilityConditionSupply + '', FeasibilityTypeofJob: ' ' + feasibilityTypeofJob + '', FeasibilityNatureofWork: ' ' + feasibilityNatureofWork + '',
                    FeasibilityHammerRequired: ' ' + feasibilityHammerRequired + '', FeasibilityToolingRequirement: ' ' + feasibilityToolingRequirement + '', fisdiablocklength: ' ' + fisdiablocklength + '', fisdiablockwidth: '' + fisdiablockwidth + '', fisdiavalue: '' + fisdiavalue + '', fisdialength: '' + fisdialength + '',
                    fisdiatotal: '' + fisdiatotal + '', fisdiablockheight: '' + fisdiablockheight + '', fisdiablockwidth: ' ' + fisdiablockwidth + '' + '', fisdiablockheight: ' ' + fisdiablockheight + '',
                    MillTC: '' + millTC + '',
                    DieDescription: '' + dieDescription + '', netweight: ' ' + netweight + '' + '', cutweight: ' ' + cutWeight + '',
                    grossweight: '' + grossweight + '', cutlength: '' + cutlength + '', Section: ' ' + section + '' + '', materialweights: ' ' + materialweights + '',
                    FeasibilityLubricantPreferred: '' + FeasibilityLubricantPreferred + '', FeasibilityMaterialGrade: '' + FeasibilityMaterialGrade + '', FeasibilityHeattreatment: ' ' + FeasibilityHeattreatment + '' + '', Feasibilitystandardapplicable: ' ' + Feasibilitystandardapplicable + '',
                    hardnessmin: '' + hardnessmin + '', hardnessmax: '' + hardnessmax + '', hardnessunits: '' + hardnessunits + '', micro: '' + micro + '', FeasibilityStatutoryandregulatoryrequirement: '' + FeasibilityStatutoryandregulatoryrequirement + '',
                    FeasibilityRemark: '' + FeasibilityRemark + ''
                    //,
                    //ssmtbl_Feasibility_OperationsInvolvedModel: '' + selValues + '', ssmtbl_Feasibility_RawMaterialTestModel: '' + rawMaterialTestValues + ''
                };
                objfea.push(feas);

                if (val == "Save") {

                    $.ajax
                        ({
                            type: "POST",
                            url: "../Feasibility/CreateFeasibility",
                            contentType: "application/json;charset=utf-8",
                            //data: JSON.stringify({ objfea }),

                            data: JSON.stringify({
                                FeasibilityId: ' ' + feasibilityId + '', InquiryNo: ' ' + InquiryNo + '', FeasibilityConditionSupply: ' ' + feasibilityConditionSupply + '', FeasibilityTypeofJob: ' ' + feasibilityTypeofJob + '', FeasibilityNatureofWork: ' ' + feasibilityNatureofWork + '',
                                FeasibilityHammerRequired: ' ' + feasibilityHammerRequired + '', FeasibilityToolingRequirement: ' ' + feasibilityToolingRequirement + '', fisdiablocklength: ' ' + fisdiablocklength + '', fisdiablockwidth: '' + fisdiablockwidth + '', fisdiavalue: '' + fisdiavalue + '', fisdialength: '' + fisdialength + '',
                                fisdiatotal: '' + fisdiatotal + '', fisdiablockheight: '' + fisdiablockheight + '', fisdiablockwidth: ' ' + fisdiablockwidth + '' + '', fisdiablockheight: ' ' + fisdiablockheight + '',
                                MillTC: '' + millTC + '',
                                DieDescription: '' + dieDescription + '', netweight: ' ' + netweight + '' + '', cutweight: ' ' + cutWeight + '',
                                grossweight: '' + grossweight + '', cutlength: '' + cutlength + '', Section: ' ' + section + '' + '', materialweights: ' ' + materialweights + '',
                                FeasibilityLubricantPreferred: '' + FeasibilityLubricantPreferred + '', FeasibilityMaterialGrade: '' + FeasibilityMaterialGrade + '', FeasibilityHeattreatment: ' ' + FeasibilityHeattreatment + '' + '', Feasibilitystandardapplicable: ' ' + Feasibilitystandardapplicable + '',
                                hardnessmin: '' + hardnessmin + '', hardnessmax: '' + hardnessmax + '', hardnessunits: '' + hardnessunits + '', micro: '' + micro + '', FeasibilityStatutoryandregulatoryrequirement: '' + FeasibilityStatutoryandregulatoryrequirement + '',
                                FeasibilityRemark: '' + FeasibilityRemark + ''
                            }),
                            //dataType: "json",
                            success: function (status) {
                                insertFeasOperationsInvolved(status);
                                alert("Feasibility added successfully");

                            },
                            error: function (err) {
                                alert('Error occured');
                            }
                        });
                }
                else {
                    $.ajax
                        ({
                            type: "POST",
                            url: "../Feasibility/CreateFeasibility",
                            data: JSON.stringify({
                                FeasibilityId: ' ' + feasibilityId + '', InquiryNo: ' ' + InquiryNo + '', FeasibilityConditionSupply: ' ' + feasibilityConditionSupply + '', FeasibilityTypeofJob: ' ' + feasibilityTypeofJob + '', FeasibilityNatureofWork: ' ' + feasibilityNatureofWork + '',
                                FeasibilityHammerRequired: ' ' + feasibilityHammerRequired + '', FeasibilityToolingRequirement: ' ' + feasibilityToolingRequirement + '', fisdiablocklength: ' ' + fisdiablocklength + '', fisdiablockwidth: '' + fisdiablockwidth + '', fisdiavalue: '' + fisdiavalue + '', fisdialength: '' + fisdialength + '',
                                fisdiatotal: '' + fisdiatotal + '', fisdiablockheight: '' + fisdiablockheight + '', fisdiablockwidth: ' ' + fisdiablockwidth + '' + '', fisdiablockheight: ' ' + fisdiablockheight + '',
                                MillTC: '' + millTC + '',
                                DieDescription: '' + dieDescription + '', netweight: ' ' + netweight + '' + '', cutweight: ' ' + cutWeight + '',
                                grossweight: '' + grossweight + '', cutlength: '' + cutlength + '', Section: ' ' + section + '' + '', materialweights: ' ' + materialweights + '',
                                FeasibilityLubricantPreferred: '' + FeasibilityLubricantPreferred + '', FeasibilityMaterialGrade: '' + FeasibilityMaterialGrade + '', FeasibilityHeattreatment: ' ' + FeasibilityHeattreatment + '' + '', Feasibilitystandardapplicable: ' ' + Feasibilitystandardapplicable + '',
                                hardnessmin: '' + hardnessmin + '', hardnessmax: '' + hardnessmax + '', hardnessunits: '' + hardnessunits + '', micro: '' + micro + '', FeasibilityStatutoryandregulatoryrequirement: '' + FeasibilityStatutoryandregulatoryrequirement + '',
                                FeasibilityRemark: '' + FeasibilityRemark + ''
                            }),
                            contentType: "application/json;charset=utf-8",
                            dataType: "json",
                            success: function (status) {
                                // insertFeasOperationsInvolved(status);
                                updateFeasOperationsInvolved(status);

                            },
                            error: function (err) {
                                alert('Error occured');
                            }
                        });
                }
            }

        </script>
        <script type="text/javascript">


            function insertFeasOperationsInvolved(status) {

                var id = status;
                var insertFeasOpsInvolved = document.getElementsByName('OperationsInvolved[]')[0];
                var feasOpsInvolved = [];
                var feasOpsInvolvedWithFeas = [];
                var feasOpsInvolvedWithFeasID = [];
                for (i = 0; i < insertFeasOpsInvolved.length; i++) {
                    if (insertFeasOpsInvolved.options[i].selected) {
                        feasOpsInvolved.push(insertFeasOpsInvolved.options[i].value);
                    }
                }

                if (feasOpsInvolved.length != 0) {
                    feasOpsInvolved.forEach(function (element) {
                        feasOpsInvolvedWithFeasID = {
                            FeasibilityId: ' ' + parseInt(status) + '', Operations_Involved: ' ' + parseInt(element) + ''
                        }
                        feasOpsInvolvedWithFeas.push(feasOpsInvolvedWithFeasID);
                    });
                    $.ajax({
                        type: "POST",
                        url: "../Feasibility/InsertFeasOperationsInvolved",
                        data: JSON.stringify(feasOpsInvolvedWithFeas),
                        contentType: "application/json;charset=utf-8",

                        success: function (success) {
                            if ($("#spn_rmtlist").text() == "") {
                                insertRawMaterialTest(id);
                            } else {
                                updateRawMaterialTest(id);
                            }
                        },
                        error: function (err) { 
                            alert(err);
                        }
                    });
                } else {
                    insertRawMaterialTest(id);
                }


            }

        </script>
        <script>
        function updateFeasOperationsInvolved(status)
        {
            if ($("#spn_opinvtaglist").text() =="") {
                insertFeasOperationsInvolved(status);
            }else{
                var id = status;
                var insertFeasOpsInvolved = [];
                insertFeasOpsInvolved = "@ViewData["opsInvolvedIDgetsequentially"]" ;
                var insertFeasOpsInvolvedArray = insertFeasOpsInvolved.split(',');
                var feasOpsInvolved = [];
                var feasOpsInvolvedWithFeas = [];
                var feasOpsInvolvedWithFeasID = [];
                $.each(insertFeasOpsInvolvedArray, function(index, value) {
                    feasOpsInvolved.push(value);
                });
                console.log(feasOpsInvolved);
                if ( feasOpsInvolved.length != 0) {
                    feasOpsInvolved.forEach(function (element) {
                        feasOpsInvolvedWithFeasID = {
                            FeasibilityId: ' ' + parseInt(status) + '', Operations_Involved: ' ' + parseInt(element) + ''
                        }
                        feasOpsInvolvedWithFeas.push(feasOpsInvolvedWithFeasID);
                    });


                    $.ajax({
                        type: "POST",
                        url: "../Feasibility/InsertFeasOperationsInvolved",
                        data: JSON.stringify(feasOpsInvolvedWithFeas),
                        contentType: "application/json;charset=utf-8",

                        success: function (success) {
                            updateRawMaterialTest(id);

                        },
                        error: function (err) { 
                            alert(err);
                        }
                    });
                }else {
                    insertRawMaterialTest(id);
                }

            }
        }
        </script>

        <script type="text/javascript">
        function updateRawMaterialTest(id) {
            //alert("Raw"+id);
            //var id = status;
            if ($("#spn_rmtlist").text() =="") {
                insertRawMaterialTest(id);
            }else{
                var rawMaterialTest = [];

                rawMaterialTest = "@ViewData["FisibilityRawmaterialtestIDsequentially"]" ;
                var insertrawMaterialTestArray = rawMaterialTest.split(',');
                var rawMaterialTestValues =[];
                var rawMaterialTestValuesWithFeas = [];
                var rawMaterialTestValuesWithFeasID = [];

                $.each(insertrawMaterialTestArray, function(index, value) {
                    rawMaterialTestValues.push(value);
                });

                if ( rawMaterialTestValues.length != 0) {
                    rawMaterialTestValues.forEach(function (element) {
                        rawMaterialTestValuesWithFeasID = {
                            FeasibilityId: ' ' + parseInt(id) + '', Raw_Material_Test: ' ' + parseInt(element) + ''
                        }
                        rawMaterialTestValuesWithFeas.push(rawMaterialTestValuesWithFeasID);
                    });
                    $.ajax({
                        type: "POST",
                        url: "../Feasibility/InsertRawMaterialTest",
                        data: JSON.stringify(rawMaterialTestValuesWithFeas),
                        contentType: "application/json;charset=utf-8",

                        success: function (success) {
                            insertVendorMill(id);
                            @*location.href = "@Url.Action("AllInquiry", "Inquiry")";*@
                        },
                        error: function (err) {
                            //alert('Error occured 123');
                            alert(err);
                        }
                    });
                }else {
                    insertVendorMill(id);
                }
            }
        }
        </script>
        <script type="text/javascript">
        function insertRawMaterialTest(id) {
            //alert("Raw"+id);
            var RawMaterialTest = document.getElementsByName('RawMaterialTest[]')[0];
            var rawMaterialTestValues = [];
            var rawMaterialTestValuesWithFeas = [];
            var rawMaterialTestValuesWithFeasID = [];
            for (var i = 0; i < RawMaterialTest.length; i++) {
                if (RawMaterialTest.options[i].selected) {
                    rawMaterialTestValues.push(RawMaterialTest.options[i].value);

                }

            }
            if ( rawMaterialTestValues.length != 0) {
                rawMaterialTestValues.forEach(function (element) {
                    rawMaterialTestValuesWithFeasID = {
                        FeasibilityId: ' ' + parseInt(id) + '', Raw_Material_Test: ' ' + parseInt(element) + ''
                    }
                    rawMaterialTestValuesWithFeas.push(rawMaterialTestValuesWithFeasID);
                });

                $.ajax({
                    type: "POST",
                    url: "../Feasibility/InsertRawMaterialTest",
                    data: JSON.stringify(rawMaterialTestValuesWithFeas),
                    contentType: "application/json;charset=utf-8",

                    success: function (success) {
                        insertVendorMill(id);
                        @*location.href = "@Url.Action("AllInquiry", "Inquiry")";*@
                    },
                    error: function (err) {
                        //alert('Error occured 123');
                        alert(err);
                    }
                });
            }else {
                insertVendorMill(id);
            }

        }
        </script>

        <script type="text/javascript">
        function insertVendorMill(id) {
            var vendormillid=$("#lbl_preferedvendorlist").text();

            if (vendormillid=="") {

                alert("Feasibility updated successfully");
                location.href = "@Url.Action("AllInquiry", "Inquiry")";
                return false;
            }else {

                //var VendorMill = document.getElementsByName('MultiVendor[]')[0];

                //var VendorMillValues = [];
                //var VendorAutoId = [];
                //var Combined = [[], []];
                //var VendorMillValuesWithFeas = [];
                //var VendorMillValuesWithFeasID = [];
                //for (var i = 0; i < VendorMill.length; i++) {
                //    if (VendorMill.options[i].selected) {
                //        VendorMillValues.push(VendorMill.options[i].value);
                //        VendorAutoId.push(i);
                //    }

                //}

                //var merged = []

                //for (i = 0; i < VendorMillValues.length; i++) {
                //    merged.push(appendArrays(VendorMillValues[i], VendorAutoId[i]));
                //}

                //function appendArrays() {
                //    var temp = []
                //    for (var i = 0; i < arguments.length; i++) {
                //        temp.push(arguments[i]);
                //    }
                //    return temp;
                //}

                //for (var i = 0; i < merged.length; i++) {
                //    var cube = merged[i];
                //    var c1 = cube[0];
                //    var c2 = cube[1];

                //    VendorMillValuesWithFeasID = {
                //        FeasibilityId: ' ' + parseInt(id) + '', VendorID: ' ' + parseInt(c1) + '', auto_id: '' + parseInt(c2)

                //    }
                //    VendorMillValuesWithFeas.push(VendorMillValuesWithFeasID);

                //}
                $.ajax({
                    type: "POST",
                    url: "../Feasibility/InsertPrefferedVendorList",
                    data: JSON.stringify({
                        PrefVendorList:vendormillid,FisibilityID:id
                    }),
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",

                    success: function (success) {
                        alert("Feasibility updated successfully");
                        location.href = "@Url.Action("AllInquiry", "Inquiry")";
                    },
                    error: function (err) {

                        alert(err);
                    }
                });

            }
        }
        </script>
        @*<script>
                var selO = document.getElementsByName('OperationsInvolved[]')[0];
                var selValues = [];
                for (i = 0; i < selO.length; i++) {
                    if (selO.options[i].selected) {
                        alert(selO.options[i].value);
                        selValues.push(selO.options[i].value);
                    }
                }

            </script>*@

        <script type="text/javascript">

        function OprInvHidewShow()
        {
           // alert($j("#spn_opinvtaglist").text());
            $("#div_oprinvtag").show();
            $("#div_oprinvlabel").hide();
            $("#spn_opinvtaglist").text("");

            $("#mySelect2").select2({
                placeholder:"Select Operation Involved",
            });
        }
        function RmtHidewShow()
        {
            $("#div_rmttag").show();
            $("#div_rmtlist").hide();
            $("#spn_rmtlist").text("");
            $("#drp_rmt").select2({
                placeholder:"Select Raw Material Test",
            });
        }
        function PrefvHidewShow()
        {
            $("#div_pvtag").show();
            $("#div_pvlist").hide();
            $("#PrefferedVendor").select2({
                placeholder:"Select Prefered Vendor",
            });
        }
        $(document).ready(function () {



            $("#txtpreferedvendor").autocomplete({

                source: function(request, response) {

                    var customer = new Array();
                    $.ajax({
                        url: "../Inquiry/Fisautocompletepreferedvendor",
                        type: "POST",
                        dataType: "json",
                        data: { Prefix: request.term },
                        success: function(data) {
                            response($.map(data, function(item) {
                                return {
                                    label: item.Text,
                                    Id:
                                        item.Value
                                }
                            }));
                        }

                    });
                },
                minLength: 1,
                change: function(event, ui) {
                    //$(this).val((ui.item ? ui.item.label : ""));
                    //alert(ui.item.label);

                }
            });
            $('#Section option:first-child');
            $("#mySelect2").on("select2:select", function (evt)
            {
                var element = evt.params.data.element;
                var $element = $(element);

                $element.detach();
                $(this).append($element);
                $(this).trigger("change");
            });
            $("#drp_rmt").on("select2:select", function (evt)
            {
                var element = evt.params.data.element;
                var $element = $(element);
                $element.detach();
                $(this).append($element);
                $(this).trigger("change");
            });
            $("#PrefferedVendor").on("select2:select", function (evt)
            {
                var element = evt.params.data.element;
                var $element = $(element);
                $element.detach();
                $(this).append($element);
                $(this).trigger("change");
            });
            var opinvsq = "@ViewData["opsInvolvedgetsequentially"]" ;

            if(opinvsq=="")
            {
                $("#div_oprinvtag").show();
                $("#div_oprinvlabel").hide();
            }
            else {
                $("#div_oprinvtag").hide();
                $("#div_oprinvlabel").show();
                $("#spn_opinvtaglist").text(opinvsq);
            }
            var fisrwseq = "@ViewData["FisibilityRawmaterialtestsequentially"]";
            if(fisrwseq=="")
            {
                $("#div_rmttag").show();
                $("#div_rmtlist").hide();
            }
            else {
                $("#div_rmttag").hide();
                $("#div_rmtlist").show();

                $("#spn_rmtlist").text(fisrwseq);
            }
            var fispvseq = "@ViewData["Fisibilityprferedvendor"]";
            if(fispvseq=="")
            {
                $("#div_pvtag").show();
                $("#div_pvlist").hide();
                $("#spnprefvendorlist").show();
            }
            else {
                $("#div_pvtag").hide();
                $("#div_pvlist").show();
                var res = fispvseq.replace(/ &amp;/g,"&");
                $("#spn_pv").text(res);
                $("#spnprefvendorlist").hide();
            }
            var FeasibilityId = $("#FeasibilityId").val();

            if (FeasibilityId == 0) {
                $("#divSaveBtn").show();
            } else {
                $("#divUpdateBtn").show();
            }

            var section = $("#hdnSection").val();
            $("#Section").val(section);
            var feasToolingRequirement = $("#FeasibilityToolingRequirement").val();

            if (feasToolingRequirement.trim() == 'Insert') {
                document.getElementById('Insert').checked = true;
                $('#Insert').click();
            }
            else if (feasToolingRequirement.trim() == 'Die Block') {

                document.getElementById('DieBlock').checked = true;
                $('#DieBlock').click();
            } else { }

            //getOperationInvovled();
            //getRawMaterialTest();
            //getRecommendedVendor();

        });

        function getOperationInvovled() {
            var FeasibilityId = $("#FeasibilityId").val();
            //$.ajax({
            //    type: "POST",
            //    url: "../Feasibility/GetOperationInvolvedByFeasId",
            //    data: JSON.stringify({ FeasibilityId: ' ' + FeasibilityId + '' }),
            //    contentType: "application/json;charset=utf-8",
            //    success: function (response) {
            //       //console.log(response);
            //        //var i = 0;
            //        //response.forEach(function (data) {
            //        //    //   alert(data.Operations_Involved);
            //        //    var insertFeasOpsInvolved = document.getElementsByName('OperationsInvolved[]')[0];
            //        // insertFeasOpsInvolved.options[i].selected = true;
            //        // i++;
            //        //})
            //        for (var i = 0; i < response.length; i++) {
            //            var insertFeasOpsInvolved = document.getElementsByName('OperationsInvolved[]')[0];
            //            var drpval = (Number(response[i].seqforfeasoperationinvolved))-1;

            //            insertFeasOpsInvolved.options[drpval].selected = true;

            //        }

            //    },
            //    error: function (err) {
            //        //alert('Error occured 123');
            //        alert(err);
            //    }
            //});
            var stringArray = @Html.Raw(Json.Encode(@ViewData["opsInvolved"]));
           // console.log(stringArray);
            for (var i = 0; i < stringArray.length; i++) {
                var insertFeasOpsInvolved = document.getElementsByName('OperationsInvolved[]')[0];
                var drpval = (Number(stringArray[i])-1);
                insertFeasOpsInvolved.options[drpval].selected = true;
            }
            getRawMaterialTest();

        }
        function getRawMaterialTest() {
            var FeasibilityId = $("#FeasibilityId").val();
            //$.ajax({
            //    type: "POST",
            //    url: "../Feasibility/GetRawMaterialTestByFeasId",
            //    data: JSON.stringify({ FeasibilityId: ' ' + FeasibilityId + '' }),
            //    contentType: "application/json;charset=utf-8",
            //    success: function (response) {
            //        //console.log(response);
            //        response.forEach(function (data) {
            //           // alert(data.Raw_Material_Test);
            //            var insertFeasOpsInvolved = document.getElementsByName('RawMaterialTest[]')[0];
            //            insertFeasOpsInvolved.options[data.Raw_Material_Test - 1].selected = true;

            //        })


            //    },
            //    error: function (err) {
            //        //alert('Error occured 123');
            //        alert(err);
            //    }
            //});
            var stringArray = @Html.Raw(Json.Encode(@ViewData["rmtest"]));

            for (var i = 0; i < stringArray.length; i++) {
                var insertFeasOpsInvolved = document.getElementsByName('RawMaterialTest[]')[0];
                var drpval = (Number(stringArray[i])-1);
                insertFeasOpsInvolved.options[drpval].selected = true;
            }
            getRecommendedVendor();

        }
        function getRecommendedVendor() {
            var FeasibilityId = $("#FeasibilityId").val();
            var stringArray = @Html.Raw(Json.Encode(@ViewData["recommVendor"]));


            for (var i = 0; i < stringArray.length; i++) {
                var insertFeasOpsInvolved = document.getElementsByName('MultiVendor[]')[0];
                var drpval = (Number(stringArray[i]));
                insertFeasOpsInvolved.options[drpval].selected = true;
            }
            //$.ajax({
            //    type: "POST",
            //    url: "../Feasibility/getRecommendedVendorByFeasId",
            //    data: JSON.stringify({ FeasibilityId: ' ' + FeasibilityId + '' }),
            //    contentType: "application/json;charset=utf-8",
            //    success: function (response) {
            //        response.forEach(function (data) {
            //            for (var i = 0; i < response.length; i++) {
            //                var insertFeasOpsInvolved = document.getElementsByName('MultiVendor[]')[0];
            //                var drpval = (Number(response[i].VSrno));
            //                insertFeasOpsInvolved.options[drpval].selected = true;
            //                //insertFeasOpsInvolved.options[i].selected = true;
            //            }
            //        })
            //    },
            //    error: function (err) {
            //        //alert('Error occured 123');
            //        alert(err);
            //    }
            //});

        }

        function getDieDescriptionValue() {
            if (document.getElementById('Insert').checked == true) {
                $('#fisdiatotal').val(0);
                $('.DivTotal').show();
                $('#Total').show();
                $('#Dia').show();
                $('#Length').show();
                $('#fisdiavalue').show();
                $('#fisdialength').show();
                $('#fisdiatotal').show();
                var dieIns = 'Dia' + $('#fisdiavalue').val() + ' Len' + $('#fisdialength').val();
                var diavalue = $('#fisdiavalue').val();
                var dialength = $('#fisdialength').show();
                $('#DieDescription').val(dieIns);
                var diavalue = $('#fisdiavalue').val();
                var dialength = $('#fisdialength').val();
                $('#DieDescription').val(dieIns);
                var apiUrl = '@System.Configuration.ConfigurationManager.AppSettings["FisCalcualtion"]';
                // 7850 * Math.pow(10 ,-6);
                //(7850 * 10 ^-9) = 0.00785
                var Total = (3.14 / 4) * (diavalue * diavalue) * (dialength) * (apiUrl);

                $('#fisdiatotal').text((Total).toFixed(2));
            }
            else if (document.getElementById('DieBlock').checked == true) {
                $('#fisdiatotal').val(0);
                $('.DivTotal').show();
                $('#Total').show();
                $('#DieLength').show();
                $('#Width').show();
                $('#Height').show();
                $('#fisdiablockwidth').show();
                $('#fisdiablockheight').show();
                $('#fisdiablocklength').show();
                $('#fisdiatotal').show();
                var dieIns = 'Len' + $j('#fisdiablocklength').val() + ' Wid' + $j('#fisdiablockwidth').val() + ' Ht' + $j('#fisdiablockheight').val();
                $('#DieDescription').val(dieIns);

                var apiUrl = '@System.Configuration.ConfigurationManager.AppSettings["FisCalcualtion"]';
                // 7850 * Math.pow(10 ,-6);
                //(7850 * 10 ^-6) = 0.00785

                var Total = (($('#fisdiablocklength').val() * $('#fisdiablockwidth').val()) * ($('#fisdiablockheight').val()) * (apiUrl));

                $('#fisdiatotal').text(Total.toFixed(2));
            } else { }
        }


        </script>
        <script>
            $('#Insert').click(function () {
                $('#Dia').show();
                $('#Length').show();
                $('#fisdiavalue').show();
                $('#fisdialength').show();
                $('#fisdiatotal').show();
                $('.DivInsert').show();
                $('.DivTotal').show();
                $('#Total').show();
                $('.DivDieBlock').hide();
                var dieIns = 'Dia' + $j('#fisdiavalue').val() + ' Len' + $j('#fisdialength').val();
                $('#DieDescription').val(dieIns);
                $('#DieLength').hide();
                $('#Width').hide();
                $('#Height').hide();
                $('#fisdiablockwidth').val(0);
                $('#fisdiablockheight').val(0);
                $('#fisdiablocklength').val(0);
                $('#fisdiablockwidth').hide();
                $('#fisdiablockheight').hide();
                $('#fisdiablocklength').hide();
                getDieDescriptionValue();
            });
            $('#DieBlock').click(function () {
                $('.DivInsert').hide();
                $('#Dia').hide();
                $('#Length').hide();
                $('#fisdiavalue').val(0);
                $('#fisdialength').val(0);
                $('#fisdiavalue').hide();
                $('#fisdialength').hide();
                $('#Total').show();
                $('#DieLength').show();
                $('#Width').show();
                $('#Height').show();
                $('#fisdiablockwidth').show();
                $('#fisdiablockheight').show();
                $('#fisdiablocklength').show();
                $('#fisdiatotal').show();
                $('.DivDieBlock').show();
                // $j('#Length').show();
                //$j('#fisdiavalue').show();
                //$j('#fisdialength').show();
                $('.DivTotal').show();
                var dieIns = 'Len' + $('#fisdiablocklength').val() + ' Wid' + $('#fisdiablockwidth').val() + ' Ht' + $('#fisdiablockheight').val();
                $('#DieDescription').val(dieIns);
                getDieDescriptionValue();
            });
        </script>

        <script type="text/javascript" language="javascript">
            //window.onbeforeunload = function() {
            //    var Ans = confirm("Are you sure you want change page!");
            //    if(Ans==true)
            //    {
            //        return false;
            //    }
            //    else
            //    {
            //        return false;
            //    }
            //};

        </script>
        <script type="text/javascript" language="JavaScript">

            var unsaved = false;

            $(":input").change(function () { //trigers change in all input fields including text type
                unsaved = true;
            });

            function unloadPage() {
                if (unsaved) {
                    return "You have unsaved changes on this page. Do you want to leave this page and discard your changes or stay on this page?";
                }
            }

            window.onbeforeunload = unloadPage;
        </script>
    }
