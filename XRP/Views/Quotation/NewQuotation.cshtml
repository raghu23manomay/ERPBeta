@model XRP.Models.ssmtbl_QuotationModel
@using XRP.Models;
@{
    ViewBag.Title = "Quotation";
    ViewBag.Active = "Marketing";
    Layout = "~/Views/Shared/_DesignLayout.cshtml";

}

<link href="~/Content/Validations/jquery-ui.css" rel="stylesheet" />

@using (Html.BeginForm("CreateQuotation", "Quotation", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{@Html.AntiForgeryToken()
@Html.ValidationSummary(true)

<header class="blue accent-3 relative">

    <div class="col-md-12">
        <div class="@TempData["HideClass"]" style="text-align:center; display:none">
            @TempData["Message"]
        </div>
    </div>
    @Html.HiddenFor(m => m.QuotationId, new { @id = "hdn_QuotationId" })
    @Html.HiddenFor(m => m.InquiryNo, new { @id = "hdn_InquiryNo" })
    @Html.HiddenFor(m => m.CustomerName, new { @id = "hdn_CustomerName" })
    @Html.HiddenFor(m => m.QuotationNo, new { @id = "hdn_QuotationNo" })
    @Html.HiddenFor(m => m.CuttingRate, new { @id = "hdn_CuttingRate" })
    @Html.HiddenFor(m => m.PerPieceRate, new { @id = "hdn_PerPieceRate" })
    @Html.HiddenFor(model => model.SectionId, new { @id = "hdn_SectionId" })
    @Html.HiddenFor(model => model.Section, new { @id = "hdn_Section" })
    @Html.HiddenFor(model => model.FileStatus, new { @id = "hdn_FileStatus" })
    @Html.HiddenFor(model => model.PartDescription, new { @id = "hdn_PartDescription" })
    @Html.HiddenFor(model => model.PartNo, new { @id = "hdn_PartNo" })
    @Html.HiddenFor(model => model.HeatTreatmentText, new { @id = "hdn_HeatTreatmentText" })
    @Html.HiddenFor(model => model.HeatTreatmentID, new { @id = "hdn_HeatTreatmentID" })
    @Html.HiddenFor(model => model.Material, new { @id = "hdn_Material" })
    @Html.HiddenFor(model => model.MachainedWeight, new { @id = "hdn_MachainedWeight" })
    @Html.HiddenFor(model => model.ForgingCostBased, new { @id = "hdn_ForgingCostBased" })
    @Html.HiddenFor(model => model.MPICostBasedOn, new { @id = "hdn_MPICostBasedOn" })
    @Html.HiddenFor(model => model.Total, new { @id = "hdn_Total" })
    @Html.HiddenFor(model => model.CuttingSquare1, new { @id = "hdn_CuttingSquare1" })
    @Html.HiddenFor(model => model.CuttingSquare2, new { @id = "hdn_CuttingSquare2" })
    @Html.HiddenFor(model => model.Forging1, new { @id = "hdn_Forging1" })
    @Html.HiddenFor(model => model.Forging2, new { @id = "hdn_Forging2" })
    @Html.HiddenFor(model => model.HeatTreatment1, new { @id = "hdn_HeatTreatment1" })
    @Html.HiddenFor(model => model.HeatTreatment2, new { @id = "hdn_HeatTreatment2" })
    @Html.HiddenFor(model => model.ShotBlasting1, new { @id = "hdn_ShotBlasting1" })
    @Html.HiddenFor(model => model.ShotBlasting2, new { @id = "hdn_ShotBlasting2" })
    @Html.HiddenFor(model => model.MPI1, new { @id = "hdn_MPI1" })
    @Html.HiddenFor(model => model.MPI2, new { @id = "hdn_MPI2" })
    @Html.HiddenFor(model => model.Grinding1, new { @id = "hdn_Grinding1" })
    @Html.HiddenFor(model => model.Grinding2, new { @id = "hdn_Grinding2" })
    @Html.HiddenFor(model => model.ColdCoining1, new { @id = "hdn_ColdCoining1" })
    @Html.HiddenFor(model => model.ColdCoining2, new { @id = "hdn_ColdCoining2" })
    @Html.HiddenFor(model => model.Machining1, new { @id = "hdn_Machining1" })
    @Html.HiddenFor(model => model.Machining2, new { @id = "hdn_Machining2" })
    @Html.HiddenFor(model => model.DieMaintenance1, new { @id = "hdn_DieMaintenance1" })
    @Html.HiddenFor(model => model.DieMaintenance2, new { @id = "hdn_DieMaintenance2" })
    @Html.HiddenFor(model => model.chk_NewQuotation)
    @Html.HiddenFor(model => model.InitialDieCost, new { @id = "hdn_initialdiecost" })
    <input type="hidden" id="hdnForgeConversionCost" />
</header>
<div class="row col-md-12">
    <div class="ibox float-e-margins">
        <div class="ibox-content">
            <div class="row">
                <div class="col-md-12">
                    <div class="card-handle">
                        <small class="card-subtitle mb-2 text-muted">Version : @Html.DisplayFor(m => m.new_Version_No) |</small>
                        <span> @Html.DisplayFor(m => m.FileStatus)</span>
                    </div>
                    <h4 class="card-title">@Html.DisplayFor(m => m.QuotationNo) &nbsp;|&nbsp;@Html.DisplayFor(m => m.CustomerName)</h4>
                    <div class="row">
                        <div class="col-md-3">
                            Part # <label class="Label">@Html.DisplayFor(m => m.PartNo)</label>
                            | Description : <label class="Label">@Html.DisplayFor(m => m.PartDescription)</label>
                            | Material : <label class="Label"> @Html.DisplayTextFor(m => m.Material) </label>
                            | Section : <label class="Label"> @Html.DisplayTextFor(m => m.Section) </label>

                        </div>
                        <div class="col-md-3">
                            Heat Treatment : <label class="Label">@Html.DisplayTextFor(m => m.HeatTreatmentText)</label>
                        </div>
                        <div class="col-md-3">
                            | Recommended Mill:
                            @foreach (var item in ViewData["MultiVendors"] as List<ssmtbl_Feasibility_MultiVendorModel>)
                            {
                                <label class="Label">@Html.Label(item.VendorName),</label>
                            }
                        </div>
                    </div>
                    <div class="row">

                        @if (ViewData["NatureofWork"].ToString() == "201")
                        {
                            <div class="col-md-2">
                                <label>  Steel Rate Per Kg:</label>
                            </div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(model => model.SteelCost, new { @class = "form-control", @readonly = "readonly", @oninput = "return CalcRawMaterialTotal();" })
                            </div>
                        }
                        else
                        {
                            <div class="col-md-2">
                                <label>  Steel Rate Per Kg:</label>
                            </div>

                            <div class="col-md-2">
                                @Html.TextBoxFor(model => model.SteelCost, new { @class = "form-control", @oninput = "return CalcRawMaterialTotal();" })
                            </div>
                        }
                        <div class="col-md-2">
                            <label>  Transportation:</label>
                        </div>
                        <div class="col-md-2">
                            @Html.TextBoxFor(model => model.Transportation, new { @class = "form-control", @oninput = "return CalcRawMaterialTotal();", @style = "width:70px;background:#F5F8FA;" })
                        </div>
                        <div class="col-md-2">
                            <label> Total Raw Material Cost: </label>
                        </div>
                        <div class="col-md-2">

                            @Html.TextBoxFor(model => model.TotalRowMaterialCost, new { @class = "form-control", @readonly = "readonly", @style = "width:70px;" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">

                <div class="col-md-3">
                    @Html.LabelFor(model => model.ForgingCostBased, new { @class = "Label" })
                </div>

                <div class="col-md-2">
                    <input type="radio" id="GrossWt" name="ForgingCostBased" class="" value="Gross Wt" onclick="CalcForging2();">
                    <label class="custom-control-label " for="GrossWt">Gross Wt</label>
                </div>
                <div class="col-md-2">
                    <input type="radio" id="CutWt" name="ForgingCostBased" class="" value="Cut Wt" onclick="CalcForging2();">
                    <label class="custom-control-label " for="CutWt">Cut Wt</label>
                </div>
                <div class="col-md-2">
                    <input type="radio" id="NetWt" name="ForgingCostBased" class="" value="Net Wt" onclick="CalcForging2();">
                    <label class="custom-control-label " for="NetWt">Net Wt</label>
                </div>


                <div class="col-md-2" style="display:none" id="divGrossWt">

                    <label class="Label">Gross Wt</label>
                    @Html.HiddenFor(m => m.GrossWeight)
                    @Html.DisplayFor(m => m.GrossWeight, new { @class = "form-control", @disabled = "disabled" })
                </div>
                <div class="col-md-2" style="display:none" id="divCutWt">
                    <label class="Label">Cut Wt</label>
                    @Html.HiddenFor(m => m.CutWeight)
                    @Html.DisplayFor(m => m.CutWeight, new { @class = "form-control", @disabled = "disabled" })
                </div>
                <div class="col-md-2" style="display:none" id="divNetWt">
                    <label class="Label">Net Wt</label>
                    @Html.HiddenFor(m => m.NetWeight)
                    @Html.DisplayFor(m => m.NetWeight, new { @class = "form-control", @disabled = "disabled" })
                </div>

            </div>
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(m => m.MPICostBasedOn, new { @class = "Label" })
                </div>
                <div class="col-md-2">

                    <input type="radio" id="NetWtMPI" name="MPICostBasedOn" class="custom-control-input" value="Net Wt" onclick="CalcMPI2();">
                    <label class="custom-control-label " for="NetWtMPI">Net Wt</label>
                </div>

                <div class="col-md-2">
                    <input type="radio" id="PerPiece" name="MPICostBasedOn" class="custom-control-input" value="Per Piece" onclick="CalcMPI2();">
                    <label class="custom-control-label " for="PerPiece">Per Piece</label>
                </div>
            </div>

            <div class="row">


                @foreach (var item in ViewData["OperationsInvolved"] as List<ssmtbl_Feasibility_OperationsInvolvedModel>)
                {

                    if (item.Operations_Involved == 1 && item.Operations_Involved_Select)
                    {

                        <div class=" col-md-3">
                            @Html.Label("Cutting", new { @class = "label" })

                            @Html.TextBoxFor(model => model.CuttingSquare1, new { @class = "form-control", @oninput = "return CalcForCuttingSq();", @placeholder = "Rs Per Sq Inch" })

                        </div>
                        <div class=" col-md-3">
                            @Html.TextBoxFor(model => model.CuttingSquare2, new { @class = "form-control", @readonly = "readonly", @placeholder = "Amount" })
                        </div>
                    }
                    if (item.Operations_Involved == 2 && item.Operations_Involved_Select)
                    {
                        <div class="col-md-3">

                            @Html.Label("Forging", new { @class = "" })
                            @Html.TextBoxFor(model => model.Forging1, new { @class = "form-control", oninput = "CalcForging2()" })
                            @Html.Label("Forging", new { @class = "" })
                            @Html.TextBoxFor(model => model.Forging2, new { @class = "form-control", @readonly = "readonly", @placeholder = "Amount" })

                        </div>
                    }
                    if (item.Operations_Involved == 3 && item.Operations_Involved_Select)
                    {
                        <div class=" col-md-3">
                            <label>Heat Treatment Cost</label>

                            @Html.TextBoxFor(model => model.HeatTreatment1, new { @class = "form-control", @oninput = "return CalcForNetWeight(this);", @placeholder = "Per KG Of Net Wt" })

                            @Html.TextBoxFor(model => model.HeatTreatment2, new { @class = "form-control", @readonly = "readonly", @placeholder = "Amount" })

                        </div>
                    }
                    if (item.Operations_Involved == 4 && item.Operations_Involved_Select)
                    {
                        <div class=" col-md-3">
                            <label>Shot Blasting</label>


                            @Html.TextBoxFor(model => model.ShotBlasting1, new { @class = "form-control", @oninput = "return CalcForNetWeight(this);", @placeholder = "Net Wt" })


                            @Html.TextBoxFor(model => model.ShotBlasting2, new { @class = "form-control", @readonly = "readonly", @placeholder = "Amount" })

                        </div>
                    }
                    if (item.Operations_Involved == 5 && item.Operations_Involved_Select)
                    {
                        <div class=" col-md-3">
                            <label>MPI</label>

                            @Html.TextBoxFor(model => model.MPI1, new { @class = "form-control", oninput = "CalcMPI2()", @placeholder = "" })

                            @Html.TextBoxFor(model => model.MPI2, new { @class = "form-control", @readonly = "readonly", @placeholder = "Amount" })

                        </div>
                    }
                    if (item.Operations_Involved == 13 && item.Operations_Involved_Select)
                    {
                        <div class=" col-md-3">
                            <label>Grinding</label>


                            @Html.TextBoxFor(model => model.Grinding1, new { @class = "form-control", oninput = "CalcForPerPiece(this)", @placeholder = "Per Piece" })

                            @Html.TextBoxFor(model => model.Grinding2, new { @class = "form-control", @readonly = "readonly", @placeholder = "Amount" })

                        </div>
                    }
                    if (item.Operations_Involved == 14 && item.Operations_Involved_Select)
                    {
                        <div class=" col-md-3">
                            <label>Cold Coining</label>


                            @Html.TextBoxFor(model => model.ColdCoining1, new { @class = "form-control", oninput = "CalcForPerPiece(this)", @placeholder = "Per Piece" })

                            @Html.TextBoxFor(model => model.ColdCoining2, new { @class = "form-control", @readonly = "readonly", @placeholder = "Amount" })

                        </div>
                    }
                    if (item.Operations_Involved == 15 && item.Operations_Involved_Select)
                    {
                        <div class=" col-md-3">
                            <label>Machaining</label>


                            @Html.TextBoxFor(model => model.Machining1, new { @class = "form-control", oninput = "CalcForPerPiece(this)", @placeholder = "Per Piece" })

                            @Html.TextBoxFor(model => model.Machining2, new { @class = "form-control", oninput = "CalcForPerPiece(this)", @readonly = "readonly", @placeholder = "Amount" })
                        </div>

                    }

                }

                        <div class="col-md-3">

                            <label>Die Maintaince Cost    </label>

                            @Html.TextBoxFor(model => model.DieMaintenance1, new { @class = "form-control", oninput = "CalcForPerPiece(this)", @placeholder = "Per Piece" })
                            &nbsp;&nbsp;
                            @Html.TextBoxFor(model => model.DieMaintenance2, new { @class = "form-control", @readonly = "readonly", @placeholder = "Amount" })

                        </div>


                <div class=" col-md-3">

                    <label>Total Conversion Cost</label>
                    @Html.TextBoxFor(model => model.TotalConverstionCost, new { @class = "form-control", @readonly = "readonly" })

                    <label>Initial Die Cost    </label>

                    @Html.TextBoxFor(model => model.InitialDieCost, new { @class = "form-control", @onblur = "setDeafult();" })


                </div>
                <div class=" col-md-3">

                    <label>ICC & Overhead on RM</label>
                    @Html.TextBoxFor(model => model.iccoverhadrm, new { @class = "form-control", @id = "txt_iccoverhadrm", @oninput = "caliccoverhead();", @placeholder = "%" })
                    &nbsp;&nbsp;
                    @Html.TextBoxFor(model => model.totaliccoverhadrm, new { @class = "form-control", @onblur = "setDeafult();", @readonly = "readonly", @id = "txt_totaliccoverhadrm", @placeholder = "Amount" })

                </div>
            </div>
            <div class="row">
                <div class="col-md-3">

                    <label>Profit on Conversion</label>

                    @Html.TextBoxFor(model => model.profitonconversion, new { @class = "form-control", @id = "txt_profitconv", @oninput = "calprofitconv();", @placeholder = "%" })
                    &nbsp;&nbsp;
                    @Html.TextBoxFor(model => model.totalprofitonconversion, new { @class = "form-control", @onblur = "setDeafult();", @readonly = "readonly", @id = "txt_totalprofitconv", @placeholder = "Amount" })

                </div>
                <div class="col-md-3">

                    <label>Rejection</label> 
                    @Html.TextBoxFor(model => model.rejection, new { @class = "form-control", @id = "txt_rejection", @oninput = "return CalcRawMaterialTotal();", @placeholder = "%" })
                    &nbsp;&nbsp;
                    @Html.TextBoxFor(model => model.totalrejection, new { @class = "form-control", @onblur = "setDeafult();", @readonly = "readonly", @id = "txt_totalrejection", @placeholder = "Amount" })

                </div>
           
                <div class="col-md-3">
                   
                        <label>Packing,Transport</label>
                        <small>Aprrox Wt(Kg):</small><label id="lbl_appwt"></label>
                   
                        @Html.TextBoxFor(model => model.packingtransport, new { @class = "form-control", @id = "txt_packingtransport", @oninput = "packing();", @placeholder = "Amount" })
                        &nbsp;&nbsp;
                        @Html.TextBoxFor(model => model.totalpackingtransport, new { @class = "form-control", @onblur = "setDeafult();", @readonly = "readonly", @id = "txt_totalpackingtransport", @placeholder = "Amount" })
                         
                        </div>
                        <div class="col-md-3">
                            <label>Total Other Cost</label>
                            @Html.TextBoxFor(model => model.totallycost, new { @class = "form-control", @onblur = "setDeafult();", @readonly = "readonly", @id = "txt_totallycost", @placeholder = "Amount" })
                             
                        </div> 
                    </div>

            <div class="row">
                <div class="col-md-4" style="display:none">
                    <label class="Label" for="ChkNewQuotation"></label>
                    @Html.CheckBox("ChkNewQuotation", true, new { @ID = "chk_NewQuotation" })
                    New Quotation

                </div>
            </div>



            <div class="row" style="padding-top:20px;">

                <div class="col-md-6">
                    <button type="button" id="QuotationViewForDownload" class="editVaccin btn btn-primary btn-sm" style="display:none" onclick="location.href = '@Url.Action("QuotationViewForApproval", "QuotationApproval", new { QuotationId =Model.id })'"><i class="icon-view_array mr-2"></i>Quotation View</button>
                    <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#myModal"><i class="icon-list-ul mr-2"></i>Terms & Condition</button>

                </div>
                <div class="col-md-3"></div>
                <div class="col-md-3">
                    <div id="div_btn_save">
                        <button type="button" name="Save" value="Save" class="btn btn-primary pull-right" id="Save" onclick="return submitQuotation();">Save</button>
                    </div>
                    
                    <div>
                        <button type="reset" class="btn btn-default" id="Reset">Reset</button>
                    </div>&nbsp;
                    <div id="div_btn_update">

                        <button type="button" name="Save" value="Update" class="btn btn-default" id="Save" onclick="submitQuotation();">Update</button>
                    </div>

                </div>
            </div>
        </div>
        </div>
</div>
        <div class="modal" id="myModal" role="dialog" style="width:60%;padding-left:20%">
            <div class="modal-dialog">

                <div class="modal-content">
                    <div class="card-header white">
                        Terms And Condition

                        <button type="button" class="close" data-dismiss="modal">
                            &times;
                        </button>
                    </div>
                    <table class="table table-hover display" id="tbl_termcondition">
                        <tbody id="tbltbody_termcondition">
                            @{

                                @Html.Hidden("TotalTermsNcondition", (ViewData["QuotaionTermsAndCondition"] as List<ssmtbl_LKP_TermsAndConditionModel>).Count());
                            }
                            @foreach (var item in ViewData["QuotaionTermsAndCondition"] as List<ssmtbl_LKP_TermsAndConditionModel>)
                            {
                                <tr>
                                    <td style="width:5px">
                                        @if (item.flag == true)
                                        {
                                            @Html.CheckBox("chk_termcondition", new { @id = "chk_termcondition_" + item.id, @value = item.id, @checked = "checked" })
                                        }
                                        else
                                        {
                                            @Html.CheckBox("chk_termcondition", new { @id = "chk_termcondition_" + item.id, @value = item.id })
                                        }

                                    </td>
                                    <td>
                                        @Html.TextArea("txt_termcondition", item.description, new { @class = "form-control", @Rows = "2", @id = "txt_termcondition_" + item.id })
                                    </td>
                                </tr>

                            }

                        </tbody>

                    </table>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="panel-body">
            <div class="modal fade" id="myModal2" role="dialog" aria-hidden="true">
                <div class="modal-dialog modal-lg">

                    <!-- MODAL ALL VERSION CONTENT-->
                    <div class="modal-content">
                        <div class="card-header white">
                            Quotation File-Version
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                        </div>

                        <table id="myTable1" class="table table-hover display">
                            <thead>
                                <tr>

                                    <th>
                                        #
                                    </th>
                                    <th>
                                        Status
                                    </th>
                                    <th>
                                        Comment
                                    </th>
                                    <th>
                                        Created By
                                    </th>
                                    <th>
                                        Created Date
                                    </th>
                                    <th>
                                        Approved By
                                    </th>
                                    <th>
                                        Approved Date
                                    </th>
                                    <th></th>
                                    <th style="display:none;"></th>
                                </tr>

                            </thead>
                            <tbody id="tbodyid1">

                                @if (ViewData["Allversion"] != null)
                                {
                                    foreach (var item in ViewData["Allversion"] as List<ssmtbl_QuotationModel>)
                                    {
                                        <tr>
                                            <td>@item.id</td>
                                            <td>@item.FileStatus</td>
                                            <td>@item.Comment</td>
                                            <td>@item.Createdby</td>
                                            <td>@item.CreatedOn</td>
                                            <td>@item.ApprovedBy</td>
                                            <td>@item.ApprovalDate</td>
                                            <td><a href="@Url.Action("QuotationPDF", "Quotation", new { QuotationId = item.id, _target = "blank" })" class="btnSelect">Download</a></td>
                                            <td style="display:none;"><a href="#" class="btnviewSelect">View</a></td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>

                    </div>


                </div>
            </div>
        </div>


        @Html.Hidden("QuotationId", Model.id)




        <script type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>
        <link href="~/NewCssAndTheme/FancyBox/jquery.fancybox.css" rel="stylesheet" />
        <script src="~/NewCssAndTheme/FancyBox/jquery.fancybox.pack.js"></script>
        <script>

            var $j = jQuery.noConflict(true);
        </script>

        <script>

            $j('a.editVaccin').fancybox({
                'width': '100%',
                'height': '350',
                'autoScale': false,
                'transitionIn': 'none',
                'transitionOut': 'none',
                'type': 'iframe',
                'overflow': 'auto'
                //'modal': true
                //'href': '/Common/Lead/GetEnquiry?Id=' + id()
            });
        </script>

        // Sharad
        <script>
            function submitQuotation() {
                debugger;
                                                                                    var tcflag = "";
                                                                                    $('[name="chk_termcondition"]').each(function () {
                                                                                        if ($(this).prop('checked') == true) {
                                                                                            tcflag = 1;

                                                                                        }
                                                                                        else {
                                                                                            //flag = 0;

                                                                                        }
                                                                                    });
                                                                                    if (tcflag != 1) {
                                                                                        alert('Please Select Terms and Conditions');
                                                                                        return false;
                                                                                    }

                                                                                    setDeafult();

                                                                                    var CuttingSquare1;
                                                                                    var Forging1;
                                                                                    var HeatTreatment1;
                                                                                    var ShotBlasting1;
                                                                                    var MPI1;
                                                                                    var Grinding1;
                                                                                    var ColdCoining1;
                                                                                    var Machining1;
                                                                                    ////////////////////
                                                                                    var CuttingSquare2;
                                                                                    var Forging2;
                                                                                    var HeatTreatment2;
                                                                                    var ShotBlasting2;
                                                                                    var MPI2;
                                                                                    var Grinding2;
                                                                                    var ColdCoining2;
                                                                                    var Machining2;
                                                                                    var SteelCost = document.getElementById('SteelCost').value;
                                                                                    if (SteelCost == "") {
                                                                                        alert("Please Enter Steel Rate");
                                                                                        return false;
                                                                                    }
                                                                                    var Transportation = document.getElementById('Transportation').value;
                                                                                    if (Transportation == "") {
                                                                                        alert("Please Enter Transportation");
                                                                                        return false;
                                                                                    }
                                                                                    if ((document.getElementById('GrossWt').checked) || (document.getElementById('CutWt').checked) || (document.getElementById('NetWt').checked)) {

                                                                                    }
                                                                                    else {
                                                                                        alert("Please Select Forging Cost Based On !");
                                                                                        return false;
                                                                                    }
                                                                                    if ((document.getElementById('NetWtMPI').checked) || (document.getElementById('PerPiece').checked)) {

                                                                                    }
                                                                                    else {
                                                                                        alert("Please Select MPI Cost Based On!");
                                                                                        return false;
                                                                                    }

                                                                                    if ($('#CuttingSquare1').length) {
                                                                                        CuttingSquare1 = $('#CuttingSquare1').val();
                                                                                        if (CuttingSquare1 == "") {
                                                                                            alert("Please Eneter Cutting Rate");
                                                                                            return false;
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        CuttingSquare1 = "0.00";
                                                                                    }
                                                                                    if ($('#Forging1').length) {
                                                                                        Forging1 = $('#Forging1').val();
                                                                                        if (Forging1 == "") {
                                                                                            alert("Please Eneter Forging Rate");
                                                                                            return false;
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        Forging1 = "0.00";
                                                                                    }
                                                                                    if ($('#HeatTreatment1').length) {
                                                                                        HeatTreatment1 = $('#HeatTreatment1').val();
                                                                                        if (HeatTreatment1 == "") {
                                                                                            alert("Please Eneter HeatTreatment Rate");
                                                                                            return false;
                                                                                        }

                                                                                    }
                                                                                    else {
                                                                                        HeatTreatment1 = "0.00";
                                                                                    }
                                                                                    if ($('#ShotBlasting1').length) {
                                                                                        ShotBlasting1 = $('#ShotBlasting1').val();
                                                                                        if (ShotBlasting1 == "") {
                                                                                            alert("Please Eneter ShotBlasting Rate");
                                                                                            return false;
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        ShotBlasting1 = "0.00";
                                                                                    }
                                                                                    if ($('#MPI1').length) {
                                                                                        MPI1 = $('#MPI1').val();
                                                                                        if (MPI1 == "") {
                                                                                            alert("Please Eneter MPI Rate");
                                                                                            return false;
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        MPI1 = "0.00";
                                                                                    }

                                                                                    if ($('#Grinding1').length) {
                                                                                        Grinding1 = $('#Grinding1').val();
                                                                                        if (Grinding1 == "") {
                                                                                            alert("Please Eneter Grinding Rate");
                                                                                            return false;
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        Grinding1 = "0.00";
                                                                                    }
                                                                                    if ($('#ColdCoining1').length) {
                                                                                        ColdCoining1 = $('#ColdCoining1').val();
                                                                                        if (ColdCoining1 == "") {
                                                                                            alert("Please Eneter ColdCoining Rate");
                                                                                            return false;
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        ColdCoining1 = "0.00";
                                                                                    }
                                                                                    if ($('#Machining1').length) {
                                                                                        Machining1 = $('#Machining1').val();
                                                                                        if (Machining1 == "") {
                                                                                            alert("Please Eneter Machining Rate");
                                                                                            return false;
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        Machining1 = "0.00";
                                                                                    }



                                                                                    if ($('#CuttingSquare2').length) {
                                                                                        CuttingSquare2 = $('#CuttingSquare2').val();
                                                                                    }
                                                                                    else {
                                                                                        CuttingSquare2 = "0.00";
                                                                                    }
                                                                                    if ($('#Forging2').length) {
                                                                                        Forging2 = $('#Forging2').val();
                                                                                    }
                                                                                    else {
                                                                                        Forging2 = "0.00";
                                                                                    }
                                                                                    if ($('#HeatTreatment2').length) {
                                                                                        HeatTreatment2 = $('#HeatTreatment2').val();
                                                                                    }
                                                                                    else {
                                                                                        HeatTreatment2 = "0.00";
                                                                                    }
                                                                                    if ($('#ShotBlasting2').length) {
                                                                                        ShotBlasting2 = $('#ShotBlasting2').val();
                                                                                    }
                                                                                    else {
                                                                                        ShotBlasting2 = "0.00";
                                                                                    }
                                                                                    if ($('#MPI2').length) {
                                                                                        MPI2 = $('#MPI2').val();
                                                                                    }
                                                                                    else {
                                                                                        MPI2 = "0.00";
                                                                                    }
                                                                                    if ($('#Grinding2').length) {
                                                                                        Grinding2 = $('#Grinding2').val();
                                                                                    }
                                                                                    else {
                                                                                        Grinding2 = "0.00";
                                                                                    }
                                                                                    if ($('#ColdCoining2').length) {
                                                                                        ColdCoining2 = $('#ColdCoining2').val();
                                                                                    }
                                                                                    else {
                                                                                        ColdCoining2 = "0.00";
                                                                                    }
                                                                                    if ($('#Machining2').length) {
                                                                                        Machining2 = $('#Machining2').val();
                                                                                    }
                                                                                    else {
                                                                                        Machining2 = "0.00";
                                                                                    }

                                                                                    var QuotationId = document.getElementById('hdn_QuotationId').value;

                                                                                    var InquiryNo = document.getElementById('hdn_InquiryNo').value;
                                                                                    var QuotationNo = document.getElementById('hdn_QuotationNo').value;
                                                                                    var CustomerName = document.getElementById('hdn_CustomerName').value;
                                                                                    var PartDescription = document.getElementById('hdn_PartDescription').value;
                                                                                    var PartNo = document.getElementById('hdn_PartNo').value;
                                                                                    var HeatTreatmentID = document.getElementById('hdn_HeatTreatmentID').value;
                                                                                    var Material = document.getElementById('hdn_Material').value;
                                                                                    var SectionId = document.getElementById('hdn_SectionId').value;
                                                                                    var MachainedWeight = document.getElementById('hdn_MachainedWeight').value;
                                                                                    var GrossWeight = document.getElementById('GrossWeight').value;
                                                                                    var CutWeight = document.getElementById('CutWeight').value;
                                                                                    var NetWeight = document.getElementById('NetWeight').value;
                                                                                    //var ForgingCostBased = document.getElementById('ForgingCostBased').value;
                                                                                    //var MPICostBasedOn = document.getElementById('MPICostBasedOn').value;

                                                                                    var Total = 0;
                                                                                    var TotalRowMaterialCost = parseFloat(document.getElementById('TotalRowMaterialCost').value).toFixed(2);
                                                                                    var TotalConverstionCost = document.getElementById('TotalConverstionCost').value;
                                                                                    var TotalComponentCost = (parseFloat(TotalRowMaterialCost) + parseFloat(TotalConverstionCost)).toFixed(2);
                                                                                    //document.getElementById('TotalComponentCost').value;
                                                                                    //var CuttingSquare1 = document.getElementById('CuttingSquare1').value;
                                                                                    //var CuttingSquare2 = document.getElementById('CuttingSquare2').value;

                                                                                    var ForgingCostBased = $("input[name='ForgingCostBased']:checked").val();
                                                                                    var MPICostBasedOn = $("input[name='MPICostBasedOn']:checked").val();
                                                                                    //var Forging1 = document.getElementById('Forging1').value;
                                                                                    //var Forging2 = document.getElementById('Forging2').value;
                                                                                    //var HeatTreatment1 = document.getElementById('HeatTreatment1').value;
                                                                                    //var HeatTreatment2 = document.getElementById('HeatTreatment2').value;
                                                                                    //var ShotBlasting1 = document.getElementById('ShotBlasting1').value;
                                                                                    //var ShotBlasting2 = document.getElementById('ShotBlasting2').value;
                                                                                    //var MPI1 = document.getElementById('MPI1').value;
                                                                                    //var MPI2 = document.getElementById('MPI2').value;
                                                                                    //var Grinding1 = document.getElementById('Grinding1').value;
                                                                                    //var Grinding2 = document.getElementById('Grinding2').value;
                                                                                    //var ColdCoining1 = document.getElementById('ColdCoining1').value;
                                                                                    //var ColdCoining2 = document.getElementById('ColdCoining2').value;
                                                                                    //var Machining1 = document.getElementById('Machining1').value;
                                                                                    //var Machining2 = document.getElementById('Machining2').value;
                                                                                    var DieMaintenance1 = document.getElementById('DieMaintenance1').value;

                                                                                    if (DieMaintenance1 == "") {
                                                                                        alert("Please Enter Die Maintenance Rate");
                                                                                        return false;
                                                                                    }
                                                                                    var DieMaintenance2 = document.getElementById('DieMaintenance2').value;
                                                                                    if (isNaN(DieMaintenance2)) {
                                                                                        document.getElementById('DieMaintenance2').value = 0;
                                                                                        DieMaintenance2 = 0;
                                                                                    }
                                                                                    var InitialDieCost = document.getElementById('InitialDieCost').value;
                                                                                    if (InitialDieCost == "") {
                                                                                        alert("Please Enter Initial Die Cost");
                                                                                        return false;
                                                                                    }
                                                                                    var chk_NewQuotation = document.getElementById('chk_NewQuotation').value;

                                                                                    var icc = document.getElementById('txt_iccoverhadrm').value;
                                                                                    var icctotal = document.getElementById('txt_totaliccoverhadrm').value;
                                                                                    var prof = document.getElementById('txt_profitconv').value;
                                                                                    var proftotal = document.getElementById('txt_totalprofitconv').value;
                                                                                    var rej = document.getElementById('txt_rejection').value;
                                                                                    var rejtotal = document.getElementById('txt_totalrejection').value;
                                                                                    var pack = document.getElementById('txt_packingtransport').value;
                                                                                    var packtotal = document.getElementById('txt_totalpackingtransport').value;
                                                                                    var totally = document.getElementById('txt_totallycost').value;



                                                                                    //var RawMaterialTest = document.getElementsByName('RawMaterialTest[]')[0];
                                                                                    //var rawMaterialTestValues = [];
                                                                                    //for (var i = 0; i < RawMaterialTest.length; i++) {
                                                                                    //    if (RawMaterialTest.options[i].selected) {
                                                                                    //        rawMaterialTestValues.push(RawMaterialTest.options[i].value);

                                                                                    //    }

                                                                                    //}

                                                                                    //var selO = document.getElementsByName('OperationsInvolved[]')[0];
                                                                                    //var selValues = [];
                                                                                    //for (i = 0; i < selO.length; i++) {
                                                                                    //    if (selO.options[i].selected) {

                                                                                    //        selValues.push(selO.options[i].value);
                                                                                    //    }
                                                                                    //}

                                                                                    var quat = [];
                                                                                    var model = [];
                                                                                    model = {
                                                                                        QuotationId: '' + QuotationId + '',
                                                                                        InquiryNo: ' ' + InquiryNo + '', QuotationNo: ' ' + QuotationNo + '',
                                                                                        CustomerName: ' ' + CustomerName + '',
                                                                                        PartDescription: ' ' + PartDescription + '',
                                                                                        PartNo: ' ' + PartNo + '',
                                                                                        HeatTreatmentID: ' ' + HeatTreatmentID + '', Material: ' ' + Material + '', SectionId: ' ' + SectionId + '', MachainedWeight: ' ' + MachainedWeight + '',
                                                                                        GrossWeight: ' ' + GrossWeight + '', CutWeight: ' ' + CutWeight + '', NetWeight: ' ' + NetWeight + '', ForgingCostBased: ' ' + ForgingCostBased + '',
                                                                                        MPICostBasedOn: ' ' + MPICostBasedOn + '', SteelCost: ' ' + SteelCost + '', Transportation: ' ' + Transportation + '',
                                                                                        Total: ' ' + Total + '', TotalRowMaterialCost: ' ' + TotalRowMaterialCost + '', CuttingSquare1: ' ' + CuttingSquare1 + '', CuttingSquare2: ' ' + CuttingSquare2 + '',
                                                                                        Forging1: ' ' + Forging1 + '', Forging2: ' ' + Forging2 + '', HeatTreatment1: ' ' + HeatTreatment1 + '', HeatTreatment2: ' ' + HeatTreatment2 + '',
                                                                                        ShotBlasting1: ' ' + ShotBlasting1 + '', ShotBlasting2: ' ' + ShotBlasting2 + '', MPI1: ' ' + MPI1 + '', MPI2: ' ' + MPI2 + '',
                                                                                        Grinding1: ' ' + Grinding1 + '', Grinding2: ' ' + Grinding2 + '', ColdCoining1: ' ' + ColdCoining1 + '',
                                                                                        ColdCoining2: ' ' + ColdCoining2 + '', Machining1: ' ' + Machining1 + '',
                                                                                        Machining2: ' ' + Machining2 + '', TotalComponentCost: '' + TotalComponentCost + '', TotalConverstionCost: '' + TotalConverstionCost + '',
                                                                                        DieMaintenance1: ' ' + DieMaintenance1 + '', InitialDieCost: '' + InitialDieCost + '', ForgingCostBased: '' + ForgingCostBased + '', MPICostBasedOn: '' + MPICostBasedOn + '',
                                                                                        DieMaintenance2: ' ' + DieMaintenance2 + '', chk_NewQuotation: ' ' + chk_NewQuotation + '',

                                                                                        iccoverhadrm: ' ' + icc + '', totaliccoverhadrm: ' ' + icctotal + '', profitonconversion: ' ' + prof + '', totalprofitonconversion: ' ' + proftotal + '',
                                                                                        rejection: ' ' + rej + '', totalrejection: ' ' + rejtotal + '', packingtransport: ' ' + pack + '',
                                                                                        totalpackingtransport: ' ' + packtotal + '', totallycost: ' ' + totally + ''
                                                                                        //,
                                                                                        //ssmtbl_Feasibility_OperationsInvolvedModel: '' + selValues + '', ssmtbl_Feasibility_RawMaterialTestModel: '' + rawMaterialTestValues + ''
                                                                                    };
                                                                                    quat.push(model);
                                                                                    var chknew = document.getElementById("chk_NewQuotation").value;
                                                                                    if (chknew == "true") {
                                                                                        //if (document.getElementById("Save").value == "Save") {
                                                                                        debugger;
                                                                                        $.ajax
                                                                                               ({
                                                                                                   type: "POST",
                                                                                                   url: "../Quotation/CreateQuotation",
                                                                                                   data: JSON.stringify(model),
                                                                                                   contentType: "application/json;charset=utf-8",
                                                                                                   dataType: "json",
                                                                                                   success: function (status) {
                                                                                                       insertTermsNCondition(status);
                                                                                                       alert("Quotation Created Successfully");
                                                                                                       location.href = "@Url.Action("AllInquiry", "Inquiry")";
                                                                                                   },
                                                                                                   error: function (err) {
                                                                                                       alert('Error occured');
                                                                                                   }
                                                                                               });
                                                                                    }
                                                                                    else {
                                                                                        $.ajax
                                                                                              ({
                                                                                                  type: "POST",
                                                                                                  url: "../Quotation/CreateQuotation",
                                                                                                  data: JSON.stringify(model, QuotationId),
                                                                                                  contentType: "application/json;charset=utf-8",
                                                                                                  dataType: "json",
                                                                                                  success: function (status) {
                                                                                                      UpdateTermsNConditionForTrue(QuotationId);
                                                                                                      UpdateTermsNConditionForFalse(QuotationId);
                                                                                                      alert("Quotation Updated Successfully");
                                                                                                      location.href = "@Url.Action("AllInquiry", "Inquiry")";
                                                                                                  },
                                                                                                  error: function (err) {
                                                                                                      alert('Error occured');
                                                                                                  }
                                                                                              });
                                                                                    }
                                                                                }

        </script>

        <script type="text/javascript">
            function UpdateTermsNConditionForFalse(status) {

                var qid = status;
                var v1 = "";
                var v2 = "";
                var flag = "false";
                $('[name="chk_termcondition"]').each(function () {
                    if ($(this).prop('checked') == false) {
                        id = $(this).val();
                        v1 = $(this).val();
                        var chkid = "txt_termcondition_" + $(this).val();
                        var tcdesc = $("#" + chkid).val();
                        if (id != "false") {
                            $.ajax
                                ({
                                    type: "POST",
                                    url: "../Quotation/InsertTermsNCondition",
                                    // data: params,
                                    data: JSON.stringify({

                                        id, tcdesc, qid, flag

                                    }),
                                    contentType: "application/json;charset=utf-8",
                                    dataType: "json",
                                    success: function (status) {

                                    },
                                    error: function (err) {

                                        //  alert(err.message);
                                    }
                                });


                        }

                    }
                });

                //var str1 = v1.slice(0, -1);
                //if (str1 == "") {
                //    alert("Please select Term & condition");
                //    return false;
                //}




            }
            function UpdateTermsNConditionForTrue(status) {

                var qid = status;
                var v1 = "";
                var v2 = "";
                var flag = "true";
                $('[name="chk_termcondition"]').each(function () {
                    if ($(this).prop('checked') == true) {
                        id = $(this).val();
                        v1 = $(this).val();
                        var chkid = "txt_termcondition_" + $(this).val();
                        var tcdesc = $("#" + chkid).val();
                        if (id != "false") {
                            $.ajax
                                ({
                                    type: "POST",
                                    url: "../Quotation/InsertTermsNCondition",
                                    // data: params,
                                    data: JSON.stringify({

                                        id, tcdesc, qid, flag

                                    }),
                                    contentType: "application/json;charset=utf-8",
                                    dataType: "json",
                                    success: function (status) {

                                    },
                                    error: function (err) {

                                        // alert(err.message);
                                    }
                                });
                        }


                    }
                });

                //var str1 = v1.slice(0, -1);
                //if (str1 == "") {
                //    alert("Please select Term & condition");
                //    return false;
                //}




            }
            function insertTermsNCondition(status) {

                var qid = status;
                var v1 = "";
                var v2 = "";
                var flag = "true";
                $('[name="chk_termcondition"]').each(function () {
                    if ($(this).prop('checked') == true) {
                        id = $(this).val();
                        v1 = $(this).val();
                        var chkid = "txt_termcondition_" + $(this).val();
                        var tcdesc = $("#" + chkid).val();

                        $.ajax
                            ({
                                type: "POST",
                                url: "../Quotation/InsertTermsNCondition",
                                // data: params,
                                data: JSON.stringify({

                                    id, tcdesc, qid, flag

                                }),
                                contentType: "application/json;charset=utf-8",
                                dataType: "json",
                                success: function (status) {

                                },
                                error: function (err) {

                                    // alert(err.message);
                                }
                            });

                    }
                });

                //var str1 = v1.slice(0, -1);
                //if (str1 == "") {
                //    alert("Please select Term & condition");
                //    return false;
                //}




            }

        </script>
        <script type="text/javascript">
                                                                                $j(document).ready(function () {
                                                                                    //  $j(".form-control input[type='text']").val("");
                                                                                    $j("#lbl_appwt").text(@ViewData["fistotal"]);
                                                                                    var ForgingCostBased = $j("#hdn_ForgingCostBased").val();
                                                                                    var MPICostBasedOn = $j("#hdn_MPICostBasedOn").val();
                                                                                    if (ForgingCostBased == 'Gross Wt') {
                                                                                        $j('#GrossWt').click();
                                                                                    }
                                                                                    else if (ForgingCostBased == 'Net Wt') {
                                                                                        $j('#NetWt').click();
                                                                                    }
                                                                                    else if (ForgingCostBased == 'Cut Wt') {
                                                                                        $j('#CutWt').click();
                                                                                    } else { }

                                                                                    if (MPICostBasedOn == 'Net Wt') {
                                                                                        $j('#NetWtMPI').click();
                                                                                    }
                                                                                    else if (MPICostBasedOn == 'Per Piece') {
                                                                                        $j('#PerPiece').click();
                                                                                    }
                                                                                    var status = $j("#hdn_FileStatus").val();//Sharad
                                                                                    //      alert(status);
                                                                                    if (status == "Quotation Approval Pending") {
                                                                                        $j("#div_btn_update").show();
                                                                                        $j("#div_btn_save").hide();
                                                                                        $j("#Reset").hide();
                                                                                        $j("#chk_NewQuotation").val(false);

                                                                                    }
                                                                                    else if (status == "Conditional Quotation Approved") {
                                                                                        $j("#div_btn_save").hide();
                                                                                        $j("#div_btn_update").show();
                                                                                        $j("#Reset").hide();
                                                                                        $j("#chk_NewQuotation").val(false);
                                                                                    }
                                                                                    else if (status == "Quotation Approved") {
                                                                                        $j("#QuotationViewForDownload").show();
                                                                                        $j("#div_btn_save").hide();
                                                                                        $j("#div_btn_update").hide();
                                                                                        $j("#Reset").hide();
                                                                                        $j("#chk_NewQuotation").val(false);
                                                                                    }
                                                                                    else {

                                                                                        $j("#div_btn_save").show();
                                                                                        $j("#div_btn_update").hide();
                                                                                        $j("#chk_NewQuotation").val(true);
                                                                                        var chk_NewQuotation = $j("#chk_NewQuotation").val();
                                                                                        // alert(chk_NewQuotation);
                                                                                    }

                                                                                    //function cuttingratecal() {
                                                                                    try {

                                                                                        // var section = parseFloat($("#Section").val()); -- Sharad

                                                                                        var section = ($("#hdn_SectionId").val());
                                                                                        $.ajax({
                                                                                            type: "POST",
                                                                                            url: "../Quotation/selectcuttingrate",
                                                                                            // data: params,
                                                                                            data: JSON.stringify({ section: ' ' + section + '' }),
                                                                                            contentType: "application/json;charset=utf-8",
                                                                                            dataType: "json",
                                                                                            success: function (data) {

                                                                                                $("#CuttingRate").val(data.cuttingrateperpc);
                                                                                                // CalcForCuttingSq();

                                                                                            },
                                                                                            error: function (err) {
                                                                                                alert('Error occured');
                                                                                                //errormsg('inmsg', err.message)
                                                                                            }
                                                                                        });

                                                                                        CalcTotal();
                                                                                    }
                                                                                    catch (err) {
                                                                                        alert(err.message);
                                                                                    }
                                                                                });
        </script>

        <script type="text/javascript">
            function totally() {
                var fcc = 0;

                var steelrate = parseFloat($("#SteelCost").val());
                var gw = parseFloat($("#GrossWeight").val());
                if ($("#hdnForgeConversionCost").length) {
                    fcc = parseFloat($("#hdnForgeConversionCost").val());
                }
                else {
                    fcc = 0;
                }
                var icc = 0;
                if ($("#txt_totaliccoverhadrm").val() == "") {
                    icc = 0
                }
                else {
                    icc = parseFloat($("#txt_totaliccoverhadrm").val());
                }
                var prof = 0;
                if ($("#txt_totalprofitconv").val() == "") {
                    prof = 0
                }
                else {
                    prof = parseFloat($("#txt_totalprofitconv").val());
                }
                var rej = 0;
                if ($("#txt_totalrejection").val() == "") {
                    rej = 0
                }
                else {
                    rej = parseFloat($("#txt_totalrejection").val());
                }
                var pck = 0;
                if ($("#txt_totalpackingtransport").val() == "") {
                    pck = 0
                }
                else {
                    pck = parseFloat($("#txt_totalpackingtransport").val());
                }
                var tot = parseFloat((gw * steelrate) + (fcc) + (icc) + (prof) + (rej) + (pck)).toFixed(2);
                $("#txt_totallycost").val(tot);

            }
            function packing() {
                var forgewt = 0;
                var nw = 0;
                if ($("#txt_packingtransport").val() == "") {

                }
                else {
                    var pack = parseFloat($("#txt_packingtransport").val());  // Sharad

                    if ($("#NetWeight").length) {
                        nw = parseFloat($("#NetWeight").val());
                    }
                    else {
                        nw = 0;
                    }
                    var pck = parseFloat((nw * pack)).toFixed(2);
                    $("#txt_totalpackingtransport").val(pck);
                    totally();
                }

            }
            function caliccoverhead() {

                if ($("#txt_iccoverhadrm").val() == "") {

                }
                else {

                    var steelrate = parseFloat($("#SteelCost").val());
                    var overhead = parseFloat($("#txt_iccoverhadrm").val());
                    //var overheadcost = parseFloat(steelrate * overhead).toFixed(2);
                    var overheadcost = parseFloat((steelrate * overhead) / 100).toFixed(2); //Sharad
                    $("#txt_totaliccoverhadrm").val(overheadcost)
                    totally();
                }


            }
            function rejection() {
                if ($("#txt_rejection").val() == "") {

                }
                else {
                    var fcc = 0;
                    var mc = 0;
                    var tfcc = $("#hdnForgeConversionCost").val();
                    var steelrate = parseFloat($("#SteelCost").val());
                    var gw = parseFloat($("#GrossWeight").val());
                    if ($("#Forging2").length) {
                        fcc = parseFloat($("#Forging2").val());
                    }
                    else {
                        fcc = 0;
                    }
                    if ($("#Machining2").length) {
                        mc = parseFloat($("#Machining2").val());
                    }
                    else {
                        mc = 0;
                    }

                    var rc = parseFloat($("#txt_rejection").val());
                    //var toticc = parseFloat(((steelrate * gw) + parseFloat(fcc) + parseFloat(mc))) * parseFloat(rc);

                    var toticc = parseFloat((((steelrate * gw) + parseFloat(tfcc) + parseFloat(mc))) * parseFloat(rc) / 100); // Sharad
                    $("#txt_totalrejection").val(toticc.toFixed(2));
                    totally();
                }
            }
            function calprofitconv() {

                if ($("#txt_profitconv").val() == "") {

                }
                else {
                    var fcc = 0;
                    var mc = 0;
                    var ht = 0;
                    var sb = 0;
                    var mp = 0;
                    var steelrate = parseFloat($("#SteelCost").val());
                    var gw = parseFloat($("#GrossWeight").val());
                    if ($("#Forging2").length) {
                        fcc = parseFloat($("#Forging2").val());
                    }
                    else {
                        fcc = 0;
                    }
                    if ($("#Machining2").length) {
                        mc = parseFloat($("#Machining2").val());
                    }
                    else {
                        mc = 0;
                    }

                    if ($("#HeatTreatment2").length) {
                        ht = parseFloat($("#HeatTreatment2").val());
                    }
                    else {
                        ht = 0;
                    }

                    if ($("#ShotBlasting2").length) {
                        sb = parseFloat($("#ShotBlasting2").val());
                    }
                    else {
                        sb = 0;
                    }

                    if ($("#MPI2").length) {
                        mp = parseFloat($("#MPI2").val());
                    }
                    else {
                        mp = 0;
                    }
                    //
                    var ForgeConversionCost = parseFloat((parseFloat(fcc) + parseFloat(ht) + parseFloat(sb) + parseFloat(mp))); //Sharad
                    $("#hdnForgeConversionCost").val(ForgeConversionCost.toFixed(2));
                    var profcc = parseFloat($("#txt_profitconv").val());
                    //  var toticc = parseFloat(((steelrate * gw) + fcc + mc)) * parseFloat(profcc);
                    //var toticc = parseFloat(((steelrate * gw) + parseFloat(fcc) + parseFloat(mc))) * parseFloat(profcc);
                    var toticc = parseFloat((((steelrate * gw) + parseFloat(ForgeConversionCost) + parseFloat(mc))) * parseFloat(profcc) / 100);  // Sharad
                    //alert(toticc);
                    $("#txt_totalprofitconv").val(toticc.toFixed(2));
                    totally();
                }
                // caliccoverhead();
            }

            function CalcRawMaterialTotal() {
                try {
                    var cw = parseFloat($("#CutWeight").val());
                    var nw = parseFloat($("#NetWeight").val());
                    var gw = parseFloat($('#GrossWeight').val());
                    var sc = parseFloat($('#SteelCost').val());



                    //if ($("input[name='ForgingCostBased']:checked").val() == 'Gross Wt') {

                    var trans = parseFloat(IsNumber($('#Transportation').val()));
                    var tc = parseFloat(sc + trans);
                    //var tgc = parseFloat((gw * sc) + trans).toFixed(2);
                    var tgc = parseFloat((gw) * (sc + trans).toFixed(2));
                    $('#TotalRowMaterialCost').val(IsNumber(tgc).toFixed(2));
                    $('#Total').val(parseFloat(IsNumber(tc)).toFixed(2));
                    var tconcost = parseFloat($('#TotalConverstionCost').val());
                    var totalcomcost = tgc + IsNumber(tconcost);
                    $('#TotalComponentCost').val(parseFloat(totalcomcost).toFixed(2));
                    CalcTotal();

                    //}
                    //if ($("input[name='ForgingCostBased']:checked").val() == 'Cut Wt') {
                    //    var trans = parseFloat(IsNumber($('#Transportation').val()));
                    //    var tc = parseFloat(sc + trans);
                    //    var tgc = parseFloat((cw * sc) + trans).toFixed(2);
                    //    $('#TotalRowMaterialCost').val(IsNumber(tgc));
                    //    $('#Total').val(parseFloat(IsNumber(tc)).toFixed(2));
                    //    var tconcost = parseFloat($('#TotalConverstionCost').val());
                    //    var totalcomcost = tgc + IsNumber(tconcost);
                    //    $('#TotalComponentCost').val(parseFloat(totalcomcost).toFixed(2));

                    //    CalcTotal();

                    //}
                    //if ($("input[name='ForgingCostBased']:checked").val() == 'Net Wt') {
                    //    var trans = parseFloat(IsNumber($('#Transportation').val()));
                    //    var tc = parseFloat(sc + trans);
                    //    var tgc = parseFloat((nw * sc) + trans).toFixed(2);
                    //    $('#TotalRowMaterialCost').val(IsNumber(tgc));
                    //    $('#Total').val(parseFloat(IsNumber(tc)).toFixed(2));
                    //    var tconcost = parseFloat($('#TotalConverstionCost').val());
                    //    var totalcomcost = tgc + IsNumber(tconcost);
                    //    $('#TotalComponentCost').val(parseFloat(totalcomcost).toFixed(2));

                    //    CalcTotal();

                    //}

                    calprofitconv();
                    caliccoverhead();
                    rejection();


                }
                catch (err) {

                    errormsg('commmsg', err.message);
                }

            }
            // Sharad
            //function cuttingratecal() {
            //    try {

            //        var section = parseFloat($("#Section").val());


            //        $.ajax({
            //            type: "POST",
            //            url: "/Quotation/selectcuttingrate",
            //            // data: params,
            //            data: JSON.stringify({ section: ' ' + section + '' }),
            //            contentType: "application/json;charset=utf-8",
            //            dataType: "json",
            //            success: function (data) {

            //                $("#CuttingRate").val(data.cuttingrateperpc);
            //                CalcForCuttingSq();

            //            },
            //            error: function (err) {
            //                //    alert('Error occured');
            //                errormsg('inmsg', err.message)
            //            }
            //        });

            //        CalcTotal();
            //    }
            //    catch (err) {
            //        alert(err.message);
            //    }
            //}


            function CalcTotal() {

                setDeafult();
                var CuttingSquare2;
                var Forging2;
                var HeatTreatment2;
                var ShotBlasting2;
                var MPI2;
                var Grinding2;
                var ColdCoining2;
                var Machining2;

                if ($('#CuttingSquare2').length) {
                    CuttingSquare2 = $('#CuttingSquare2').val();
                }
                else {
                    CuttingSquare2 = "0.00";
                }
                if ($('#Forging2').length) {
                    Forging2 = $('#Forging2').val();
                }
                else {
                    Forging2 = "0.00";
                }
                if ($('#HeatTreatment2').length) {
                    HeatTreatment2 = $('#HeatTreatment2').val();
                }
                else {
                    HeatTreatment2 = "0.00";
                }
                if ($('#ShotBlasting2').length) {
                    ShotBlasting2 = $('#ShotBlasting2').val();
                }
                else {
                    ShotBlasting2 = "0.00";
                }
                if ($('#MPI2').length) {
                    MPI2 = $('#MPI2').val();
                }
                else {
                    MPI2 = "0.00";
                }
                if ($('#Grinding2').length) {
                    Grinding2 = $('#Grinding2').val();
                }
                else {
                    Grinding2 = "0.00";
                }
                if ($('#ColdCoining2').length) {
                    ColdCoining2 = $('#ColdCoining2').val();
                }
                else {
                    ColdCoining2 = "0.00";
                }
                if ($('#Machining2').length) {
                    Machining2 = $('#Machining2').val();
                }
                else {
                    Machining2 = "0.00";
                }

                var toalconcostq = parseFloat(Forging2) + parseFloat(ShotBlasting2) + parseFloat(HeatTreatment2)
                    + parseFloat(MPI2) + parseFloat(CuttingSquare2) + parseFloat(ColdCoining2)
                    + parseFloat(Grinding2) + parseFloat(Machining2) + parseFloat(IsNumber($('#DieMaintenance2').val()));
                toalconcostq = parseFloat(toalconcostq).toFixed(2);
                $('#TotalConverstionCost').val(toalconcostq);

                var totalcomcostq = (parseFloat(toalconcostq) + parseFloat(IsNumber($('#TotalRowMaterialCost').val()))).toFixed(2);
                totalcomcostq = parseFloat(totalcomcostq).toFixed(2);
                $('#TotalComponentCost').val(totalcomcostq);

            }
            function IsNumber(ele) {
                if (isNaN(ele) || ele == '') {
                    return 0;
                }
                else { return ele; }
            }
            ///sharad
            function setDeafult() {
                $("#Transportation").on("blur", function () {
                    if ($(this).val().trim().length == 0) {
                        $(this).val("0");
                    }
                });
                $("#SteelCost").on("blur", function () {
                    if ($(this).val().trim().length == 0) {
                        $(this).val("0");
                    }
                });


                $("#CuttingSquare1").on("blur", function () {
                    if ($(this).val().trim().length == 0) {
                        $(this).val("0");
                    }
                });
                $("#Forging1").on("blur", function () {
                    if ($(this).val().trim().length == 0) {
                        $(this).val("0");
                    }
                });
                $("#HeatTreatment1").on("blur", function () {
                    if ($(this).val().trim().length == 0) {
                        $(this).val("0");
                    }
                });
                $("#ShotBlasting1").on("blur", function () {
                    if ($(this).val().trim().length == 0) {
                        $(this).val("0");
                    }
                });
                $("#MPI1").on("blur", function () {
                    if ($(this).val().trim().length == 0) {
                        $(this).val("0");
                    }
                });
                $("#Grinding1").on("blur", function () {
                    if ($(this).val().trim().length == 0) {
                        $(this).val("0");
                    }
                });
                $("#ColdCoining1").on("blur", function () {
                    if ($(this).val().trim().length == 0) {
                        $(this).val("0");
                    }
                });
                $("#Machining1").on("blur", function () {
                    if ($(this).val().trim().length == 0) {
                        $(this).val("0");
                    }
                });
                $("#DieMaintenance1").on("blur", function () {
                    if ($(this).val().trim().length == 0) {
                        $(this).val("0");
                    }
                });
                $("#InitialDieCost").on("blur", function () {
                    if ($(this).val().trim().length == 0) {
                        $(this).val("0");
                    }
                });



            }
            $j('#GrossWt').click(function () {
                $j('#divGrossWt').show();
                $j('#divCutWt').hide();
                $j('#divNetWt').hide();
                CalcRawMaterialTotal();
                CalcForging2();
            });
            $j('#CutWt').click(function () {
                $j('#divCutWt').show();
                $j('#divGrossWt').hide();
                $j('#divNetWt').hide();
                CalcRawMaterialTotal();
                CalcForging2();
            });
            $j('#NetWt').click(function () {
                $j('#divNetWt').show();
                $j('#divCutWt').hide();
                $j('#divGrossWt').hide();
                CalcRawMaterialTotal();
                CalcForging2();
            });
            function CalcForging2() {
                try {
                    var ForgingCostBasedRdo = $j("#hdn_ForgingCostBased").val();
                    var gw = parseFloat($("#GrossWeight").val());
                    var cw = parseFloat($("#CutWeight").val());
                    var nw = parseFloat($("#NetWeight").val());

                    // $('#Forging1').val(IsNumber($('#Forging1').val()));

                    var forgingcost = parseFloat($("#Forging1").val());
                    var netcostcal = "";
                    var DieMaintenance2 = "";
                    var DieMaintenance1 = parseFloat($("#DieMaintenance1").val());
                    if ($("input[name='ForgingCostBased']:checked").val() == 'Gross Wt') {

                        $("#divGrossWt").show();
                        netcostcal = parseFloat(gw * forgingcost).toFixed(2);
                        if (isNaN(netcostcal)) {
                            $("#Forging2").val("0");
                        }
                        else {
                            $("#Forging2").val(parseFloat(netcostcal).toFixed(2));
                        }

                        DieMaintenance2 = parseFloat(gw * DieMaintenance1).toFixed(2);
                        if (isNaN(DieMaintenance2)) {
                            $("#DieMaintenance2").val("0");
                        }
                        else {
                            $("#DieMaintenance2").val(parseFloat(DieMaintenance2).toFixed(2));
                        }
                        $("#Forging1").attr("placeholder", "Gross Wt");

                    }
                    if ($("input[name='ForgingCostBased']:checked").val() == 'Cut Wt') {
                        $("#divCutWt").show();
                        netcostcal = parseFloat(cw * forgingcost).toFixed(2);
                        if (isNaN(netcostcal)) {
                            $("#Forging2").val("0");
                        }
                        else {
                            $("#Forging2").val(parseFloat(netcostcal).toFixed(2));
                        }
                        DieMaintenance2 = parseFloat(cw * DieMaintenance1).toFixed(2);
                        if (isNaN(DieMaintenance2)) {
                            $("#DieMaintenance2").val("0");
                        }
                        else {
                            $("#DieMaintenance2").val(parseFloat(DieMaintenance2).toFixed(2));
                        }
                        $("#Forging1").attr("placeholder", "Cut Wt");
                    }
                    if ($("input[name='ForgingCostBased']:checked").val() == 'Net Wt') {
                        $("#divNetWt").show();
                        netcostcal = parseFloat(nw * forgingcost).toFixed(2);
                        if (isNaN(netcostcal)) {
                            $("#Forging2").val("0");
                        }
                        else {
                            $("#Forging2").val(parseFloat(netcostcal).toFixed(2));
                        }
                        DieMaintenance2 = parseFloat(nw * DieMaintenance1).toFixed(2);
                        if (isNaN(DieMaintenance2)) {
                            $("#DieMaintenance2").val("0");
                        }
                        else {
                            $("#DieMaintenance2").val(parseFloat(DieMaintenance2).toFixed(2));
                        }
                        $("#Forging1").attr("placeholder", "Net Wt");
                    }
                    if ($("input[name='ForgingCostBased']:checked").val() == 'Per Pcs') {
                        netcostcal = parseFloat(1 * forgingcost).toFixed(2);
                        if (isNaN(netcostcal)) {
                            $("#Forging2").val("0");
                        }
                        else {
                            $("#Forging2").val(parseFloat(netcostcal).toFixed(2));
                        }
                        // $("#Forging2").val(parseFloat(netcostcal).toFixed(2));
                    }
                    if ($("input[name='ForgingCostBased']:checked").val() == 'SQ In') {
                        //alert($("input[name='rd_forging']:checked").val());
                    }
                    //for quot
                    CalcTotal();
                    packing();
                }
                catch (err) {
                    alert(err.message);
                }
            }
            function CalcMPI2() {
                try {

                    var gw = parseFloat($("#GrossWeight").val());
                    var cw = parseFloat($("#CutWeight").val());
                    var nw = parseFloat($("#NetWeight").val());

                    //var pieceRate = IsNumber(parseFloat($("#PerPieceRate").val()));
                    var pieceRate = 1;
                    var mpicost = parseFloat(IsNumber($("#MPI1").val()));
                    var netcostcal = "";

                    if ($("input[name='MPICostBasedOn']:checked").val() == 'Net Wt') {
                        netcostcal = parseFloat(nw * mpicost).toFixed(2);
                        $("#MPI2").val(netcostcal);
                        $("#MPI1").attr("placeholder", "Net Wt");
                    }
                    if ($("input[name='MPICostBasedOn']:checked").val() == 'Per Piece') {
                        netcostcal = parseFloat(pieceRate * mpicost).toFixed(2);
                        $("#MPI2").val(netcostcal);
                        $("#MPI1").attr("placeholder", "Per Piece");
                    }
                    //for quot
                    CalcTotal();
                }
                catch (err) {
                    alert(err.message);
                }
            }

            function CalcForPerPiece(ppid) {
                try {

                    setDeafult();

                    //var pieceRate = parseFloat(IsNumber($("#PerPieceRate").val()));
                    var pieceRate = 1;
                    var id = ppid.id;
                    if (id == "ColdCoining1") {
                        var cc = parseFloat(IsNumber($("#ColdCoining1").val()));

                        var ccnc = parseFloat(cc * pieceRate).toFixed(2);

                        $("#ColdCoining2").val(ccnc);
                    }
                    if (id == "Grinding1") {
                        var grd = parseFloat(IsNumber($("#Grinding1").val()));

                        var grdnc = parseFloat(grd * pieceRate).toFixed(2);

                        $("#Grinding2").val(grdnc);
                    }
                    if (id == "Machining1") {
                        var mech = parseFloat(IsNumber($("#Machining1").val()));

                        var mechnc = parseFloat(mech * pieceRate).toFixed(2);

                        $("#Machining2").val(mechnc);
                    }

                    if (id == "DieMaintenance1") {
                        var ForgingCostBasedon = "";
                        var dieMaintaincecost = "";
                        var dieMaintaince = parseFloat(IsNumber($("#DieMaintenance1").val()));
                        var ForgingCostBased = $("input[name='ForgingCostBased']:checked").val();
                        if (ForgingCostBased == "Net Wt") {
                            ForgingCostBasedon = parseFloat(IsNumber($("#NetWeight").val()));
                            dieMaintaincecost = parseFloat(dieMaintaince * ForgingCostBasedon).toFixed(2);
                        }
                        else if (ForgingCostBased == "Gross Wt") {
                            ForgingCostBasedon = parseFloat(IsNumber($("#GrossWeight").val()));
                            dieMaintaincecost = parseFloat(dieMaintaince * ForgingCostBasedon).toFixed(2);
                        } else if (ForgingCostBased == "Cut Wt") {
                            ForgingCostBasedon = parseFloat(IsNumber($("#CutWeight").val()));
                            dieMaintaincecost = parseFloat(dieMaintaince * ForgingCostBasedon).toFixed(2);
                        } else { }


                        $("#DieMaintenance2").val(dieMaintaincecost);
                        //$("#DieMaintenance2").val(dieMaintaince);

                    }
                    //for quot
                    CalcTotal();
                }
                catch (err) {
                    alert(err.message);
                }
            }
            function CalcForNetWeight(netwtid) {
                try {
                    setDeafult();
                    var id = netwtid.id;
                    var netwt = $("#NetWeight").val();
                    if (id == "ShotBlasting1") {
                        var sbc = parseFloat(IsNumber($("#ShotBlasting1").val()));

                        var sbnc = parseFloat(netwt * sbc).toFixed(2);

                        $("#ShotBlasting2").val(sbnc);
                    }
                    if (id == "HeatTreatment1") {

                        var htc = parseFloat(IsNumber($("#HeatTreatment1").val()));

                        var htnc = parseFloat(htc * netwt).toFixed(2);

                        $("#HeatTreatment2").val(htnc);
                    }

                    //for quot
                    CalcTotal();
                }
                catch (err) {
                    alert(err.message);
                }
            }
            function CalcForCuttingSq() {

                var section = ($("#hdn_Section").val());
                var cuttingSquInchRate = ($("#CuttingSquare1").val());
                if (section.split(" ")[1] == "Dia") {
                    var xsec = section.split(" ")[0];

                    var cutsqinch = parseFloat((((Math.PI) * (xsec * xsec)) / (4 * 25.4 * 25.4)) * cuttingSquInchRate).toFixed(2);
                    $j('#CuttingSquare2').val(cutsqinch);
                } else {
                    var xsec = section.split(" ")[0];
                    var cutsqinch = parseFloat((((xsec * xsec)) / (25.4 * 25.4)) * cuttingSquInchRate).toFixed(2);
                    $j('#CuttingSquare2').val(cutsqinch);
                }
                CalcTotal();

            }
                                                                                            //function CalcForCuttingSq() {
                                                                                            //    try {

                                                                                            //        var drpsec = ($("#Section").val());
                                                                                            //        var drpsect = $("#Section option:selected").text();

                                                                                            //        var xsec = parseFloat(drpsect.match(/\d+/));
                                                                                            //        var calcx1 = "0";
                                                                                            //        if (drpsect.indexOf("Dia") != -1) {
                                                                                            //            calcx1 = parseFloat(((Math.PI / 4) * (xsec * xsec)) / (25.4 * 25.4)).toFixed(2);
                                                                                            //        }
                                                                                            //        else if (drpsect.indexOf("Rcs") != -1 || drpsect.indexOf("RCS") != -1) {
                                                                                            //            calcx1 = parseFloat(((xsec * xsec)) / (25.4 * 25.4)).toFixed(2);
                                                                                            //        }

                                                                                            //        var paisa = parseFloat($("#CuttingSquare1").val());
                                                                                            //        var calcx = parseFloat(calcx1 * paisa).toFixed(2);
                                                                                            //        if (drpsec != '---Please Select---') {

                                                                                            //            var cutingrate = parseFloat($("#CuttingRate").val());

                                                                                            //            var cutingcostinput = ($("#CuttingSquare1").val());

                                                                                            //            var cutingnetcost = calcx;//parseFloat(cutingrate*cutingcostinput).toFixed(2);


                                                                                            //            $("#CuttingSquare2").val(cutingnetcost);
                                                                                            //            //var toalconcostq = (parseFloat($('#Forging2').val()) + parseFloat($('#HeatTreatment2').val()) + parseFloat($('#ShotBlasting2').val())
                                                                                            //            //    + parseFloat($('#MPI2').val()) + parseFloat($('#CuttingSquare2').val()) + parseFloat($('#DieMaintenance2').val())
                                                                                            //            //   + parseFloat($('#ColdCoining2').val()) + parseFloat($('#Grinding2').val()) + parseFloat($('#Machining2').val()));

                                                                                            //            //$('#TotalConverstionCost').val(toalconcostq.toFixed(2));
                                                                                            //            //var totalcomcostq = (parseFloat(toalconcostq) + parseFloat($('#TotalRowMaterialCost').val())).toFixed(2);
                                                                                            //            //$('#TotalComponentCost').val(totalcomcostq);
                                                                                            //            CalcTotal();

                                                                                            //        }
                                                                                            //        else {

                                                                                            //            warningmsg("qomsg", "Please select section");

                                                                                            //        }

                                                                                            //    }
                                                                                            //    catch (err) {
                                                                                            //        errormsg('commmsg', err.message);
                                                                                            //    }
                                                                                            //}

        </script>
    }