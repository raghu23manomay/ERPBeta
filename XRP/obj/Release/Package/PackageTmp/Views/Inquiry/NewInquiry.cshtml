@model XRP.Models.ssmtbl_InquiryModel
@{
    ViewBag.Title = "New Enquiry";
    ViewBag.Active = "Marketing";
    Layout = "~/Views/Shared/_DesignLayout.cshtml";
}

<link href="~/Content/Validations/jquery-ui.css" rel="stylesheet" />
<style>
      #btnSubmit {
        position: absolute;
        bottom: 4%;
        right: 10%;
    }
       #btnReset {
        position: absolute;
        bottom: 4%;
        right: 2%;
    }
</style>
@using (Html.BeginForm("NewInquiry", "Inquiry", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    @*<input type="hidden" id="hdn_diedescid"/>*@
    @Html.HiddenFor(model => model.DieID, new {@id= "hdn_diedescid" })
    <fieldset>
        <header class="blue accent-3 relative">
            <div class="container-fluid text-white">
                @*<div class="row p-t-b-10 ">
                    <div class="col">*@
                        <h4>
                            <i class="icon-database"></i>
                            Enquiry
                        </h4>
                    @*</div>
                </div>*@
                <div class="row justify-content-between">
                    <ul class="nav nav-material nav-material-white responsive-tab" id="v-pills-tab" role="tablist">
                        <li>
                            <a class="nav-link" href='@Url.Action("AllInquiry", "Inquiry")'><i class="icon icon-home2"></i>Enquiry List</a>
                            @*<a class="nav-link active" id="v-pills-all-tab" data-toggle="pill" href="#v-pills-all" role="tab" aria-controls="v-pills-all"><i class="icon icon-home2"></i>All Inquiry</a>*@
                        </li>
                        @*<li>
                                <a class="nav-link" id="v-pills-buyers-tab" data-toggle="pill" href="#v-pills-buyers" role="tab" aria-controls="v-pills-buyers"><i class="icon icon-face"></i> Buyers</a>
                            </li>
                            <li>
                                <a class="nav-link" id="v-pills-sellers-tab" data-toggle="pill" href="#v-pills-sellers" role="tab" aria-controls="v-pills-sellers"><i class="icon  icon-local_shipping"></i> Sellers</a>
                            </li>*@
                        <li class="float-right">
                            <a class="nav-link active" href='@Url.Action("NewInquiry", "Inquiry")'><i class="icon icon-plus-circle"></i> New Enquiry</a>
                        </li>
                    </ul>
                </div>
            </div>

        </header>
        <div class="@ViewBag.HideClass" style="text-align:center">
            @ViewBag.Message
        </div>

        <!-- PAGE TITLE -->
        @*<div class="container-fluid animatedParent animateOnce my-3">
                <div class="animated fadeInUpShort">
                    <form id="needs-validation" novalidate>
                        <div class="row">
                            <div class="col-md-8 ">
                                <div class="row">
                                    <div class="col-md-4 mb-3">
                                        @Html.LabelFor(model => model.InquiryNo, new { @class = "Label" })
                                        @Html.TextBoxFor(model => model.InquiryNo, null, new { @class = "form-control NoStar", maxlength = 40, @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.InquiryNo, null, new { @class = "alert-danger" })
                                        <input type="text" class="form-control" id="validationCustom01"
                                               placeholder="Product Name" value="Apple Iphone 8" required>
                                    </div>
                                    <div class="col-md-4 mb-3">
                                        @Html.LabelFor(model => model.customerName, new { @class = "Label" })
                                        @Html.TextBoxFor(model => model.customerName, null, new { @class = "form-control NoStar", @id = "customerName" })
                                        @Html.ValidationMessageFor(model => model.customerName, null, new { @class = "alert-danger" })
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="category">Category</label>
                                        <input type="text" class="form-control"  placeholder="Mobile Phones" required>
                                        <select id="category" class="custom-select form-control" required>
                                            <option value="">Select Product Category</option>
                                            <option value="1">Mobile Phone</option>
                                            <option value="2">Laptop & Computers</option>
                                            <option value="3">Accessories</option>
                                        </select>
                                        <div class="invalid-feedback">
                                            Please provide a valid category.
                                        </div>
                                    </div>
                                    <div class="col-md-3 mb-3">
                                        <label for="validationCustom04">Price</label>
                                        <input type="text" class="form-control" id="validationCustom04" placeholder="$ 250"
                                               required>
                                        <div class="invalid-feedback">
                                            Please provide a valid price.
                                        </div>
                                    </div>
                                    <div class="col-md-3 mb-3">
                                        <label for="sku">SKU</label>
                                        <input type="text" class="form-control" id="sku" placeholder="sku-1029-5998" required>
                                        <div class="invalid-feedback">
                                            Please provide a valid sku.
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>*@

        <div class="container-fluid animatedParent animateOnce">
            <div class="animated fadeInUpShort">
                <div class="row my-3">
                    <div class="col-md-12">
                        <form action="#">
                            <div class="card no-b no-r" style="height:480px">
                                <div class="card-body">
                                    <div class="form-row mt-1">
                                        <div class="form-group col-6 m-0">
                                            @Html.LabelFor(model => model.InquiryNo, new { @class = "Label" })
                                            @Html.TextBoxFor(model => model.InquiryNo, null, new { @class = "form-control r-0 light s-12 ", maxlength = 40, @readonly = "readonly"  })
                                            @Html.ValidationMessageFor(model => model.InquiryNo, null, new { @class = "alert-danger" })

                                        </div>
                                        <div class="form-group col-6 m-0">
                                            @Html.LabelFor(model => model.DieNumber, new { @class = "Label" })
                                            @*@Html.DropDownListFor(model => model.DieNumber, ViewData["DieNumber"] as IEnumerable<SelectListItem>,
                                            XRP.Global.DropDownSelection.DropDownSelect, new { @class = "form-control r-0 light s-12 .chzn-select", @required = "required",@onchange="fetchdiadetails()",@id="drp_dialist"})*@
                                            @Html.TextBoxFor(model => model.DieNumber, null, new { @class = "form-control r-0 light s-12 "})
                                             @Html.ValidationMessageFor(model => model.DieNumber, null, new { @class = "alert-danger" })

                                        </div>
                                        

                                    </div>
                                    <div class="form-row mt-1">
                                        <div class="form-group col-6 m-0">
                                            @Html.LabelFor(model => model.customerName, new { @class = "Label" })
                                            @Html.TextBoxFor(model => model.customerName, null, new { @class = "form-control r-0 light s-12 ", @id = "customerName", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.customerName, null, new { @class = "alert-danger" })

                                        </div>
                                     
                                        <div class="form-group col-6 m-0">
                                            @Html.LabelFor(model => model.PartName, new { @class = "Label" })
                                            @Html.TextBoxFor(model => model.PartName, null, new { @class = "form-control r-0 light s-12 " })
                                            @Html.ValidationMessageFor(model => model.PartName, null, new { @class = "alert-danger" })

                                        </div>

                                    </div>
                                    <div class="form-row mt-1">
                                        <div class="form-group col-6 m-0">
                                            @Html.LabelFor(model => model.PartNo, new { @class = "Label" })
                                            @Html.TextBoxFor(model => model.PartNo, null, new { @class = "form-control r-0 light s-12 " })
                                            @Html.ValidationMessageFor(model => model.PartNo, null, new { @class = "alert-danger" })

                                        </div>
                                        <div class="form-group col-6 m-0">
                                            @Html.LabelFor(model => model.InquiryDate, new { @class = "Label" })
                                            @Html.TextBoxFor(model => model.InquiryDate, "{0:dd/MM/yyyy}", new { @class = "date-time-picker form-control r-0 light s-12" })
                                            @Html.ValidationMessageFor(model => model.InquiryDate, null, new { @class = "alert-danger" })

                                        </div>
                                       
                                       

                                    </div>
                                    <div class="form-row mt-1">
                                        <div class="form-group col-6 m-0">
                                            @Html.LabelFor(model => model.CustomerDrgNo, new { @class = "Label" })
                                            @Html.TextBoxFor(model => model.CustomerDrgNo, null, new { @class = "form-control r-0 light s-12 " })
                                            @Html.ValidationMessageFor(model => model.CustomerDrgNo, null, new { @class = "alert-danger" })

                                        </div>
                                        <div class="form-group col-6 m-0">
                                            @Html.LabelFor(model => model.Qty, new { @class = "Label" })
                                            @Html.TextBoxFor(model => model.Qty, null, new { @class = "form-control r-0 light s-12 ",@required="required" })
                                            @Html.ValidationMessageFor(model => model.Qty, null, new { @class = "alert-danger" })

                                        </div>
                                        

                                    </div>
                                    <div class="form-row mt-1">
                                        <div class="form-group col-6 m-0">
                                            @Html.LabelFor(model => model.FrequencyRepearOrder, new { @class = "Label" })
                                            @Html.DropDownListFor(model => model.FrequencyRepearOrder, ViewData["FreqRepeatOrder"] as IEnumerable<SelectListItem>,
                                            XRP.Global.DropDownSelection.DropDownSelect, new { @class = "form-control r-0 light s-12 .chzn-select", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.FrequencyRepearOrder, null, new { @class = "alert-danger" })

                                        </div>
                                        <div class="form-group col-6 m-0">
                                            @Html.Label("HSN / SAC Code", new { @class = "Label" })
                                            @Html.TextBoxFor(model => model.HSN, null, new { @class = "form-control r-0 light s-12 ", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.HSN, null, new { @class = "alert-danger" })

                                        </div>
                                       
                                       

                                    </div>
                                    <div class="form-row mt-1">
                                        <div class="form-group col-6 m-0">
                                            <label class="Label">Comment</label>
                                            @Html.TextBoxFor(model => model.Remark, null, new { @class = "form-control r-0 light s-12 " })
                                            @Html.ValidationMessageFor(model => model.Remark, null, new { @class = "alert-danger" })

                                        </div>
                                        <div class="form-group col-6 m-0">
                                           

                                        </div>



                                    </div>
                                </div>

                                <div class="card-body" align="right">
                                    <button type="submit" class="btn btn-primary btn-sm" id="btnSubmit" onclick="preventMultipleSubmissions()"><i class="icon-save mr-2"></i>Save</button>
                                    <button type="reset" class="btn btn-success btn-sm" id="btnReset"><i class="icon-refresh mr-2"></i>Reset</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        @*<div class="row">
                    <div class="col-md-12">
                        <div class="col-md-1"></div>

                        <div class="col-md-8">
                            <div class="form-group">
                                <div class="col-md-5 control-label">
                                    @Html.LabelFor(model => model.InquiryNo, new { @class = "Label" })
                                </div>
                                <div class="col-md-7">
                                    @Html.TextBoxFor(model => model.InquiryNo, null, new { @class = "form-control NoStar", maxlength = 40, @readonly = "readonly" })
                                    @Html.ValidationMessageFor(model => model.InquiryNo, null, new { @class = "alert-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-5 control-label">
                                    @Html.LabelFor(model => model.customerName, new { @class = "Label" })
                                </div>
                                <div class="col-md-7">
                                    @Html.TextBoxFor(model => model.customerName, null, new { @class = "form-control NoStar", @id = "customerName" })
                                    @Html.ValidationMessageFor(model => model.customerName, null, new { @class = "alert-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-5 control-label">
                                    @Html.LabelFor(model => model.InquiryDate, new { @class = "Label" })
                                </div>
                                <div class="col-md-7">
                                    @Html.TextBoxFor(model => model.InquiryDate, "{0:dd-MMM-yyyy}", new { @class = "form-control NoStar datepicker" })
                                    @Html.ValidationMessageFor(model => model.InquiryDate, null, new { @class = "alert-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-5 control-label">
                                    @Html.LabelFor(model => model.PartName, new { @class = "Label" })
                                </div>
                                <div class="col-md-7">
                                    @Html.TextBoxFor(model => model.PartName, null, new { @class = "form-control NoStar" })
                                    @Html.ValidationMessageFor(model => model.PartName, null, new { @class = "alert-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-5 control-label">
                                    @Html.LabelFor(model => model.PartNo, new { @class = "Label" })
                                </div>
                                <div class="col-md-7">
                                    @Html.TextBoxFor(model => model.PartNo, null, new { @class = "form-control NoStar" })
                                    @Html.ValidationMessageFor(model => model.PartNo, null, new { @class = "alert-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-5 control-label">
                                    @Html.LabelFor(model => model.CustomerDrgNo, new { @class = "Label" })
                                </div>
                                <div class="col-md-7">
                                    @Html.TextBoxFor(model => model.CustomerDrgNo, null, new { @class = "form-control NoStar" })
                                    @Html.ValidationMessageFor(model => model.CustomerDrgNo, null, new { @class = "alert-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-5 control-label">
                                    @Html.LabelFor(model => model.Qty, new { @class = "Label" })
                                </div>
                                <div class="col-md-7">
                                    @Html.TextBoxFor(model => model.Qty, null, new { @class = "form-control NoStar" })
                                    @Html.ValidationMessageFor(model => model.Qty, null, new { @class = "alert-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-5 control-label">
                                    @Html.LabelFor(model => model.FrequencyRepearOrder, new { @class = "Label" })
                                </div>
                                <div class="col-md-7">
                                    @Html.DropDownListFor(model => model.FrequencyRepearOrder, ViewData["FreqRepeatOrder"] as IEnumerable<SelectListItem>,
            XRP.Global.DropDownSelection.DropDownSelect, new { @class = ".chzn-select form-control" })
                                    @Html.ValidationMessageFor(model => model.FrequencyRepearOrder, null, new { @class = "alert-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3"></div>
                    </div>
                </div>

                &nbsp;
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group" style="text-align:center">
                            <input type="submit" name="Save" value="Save" class="btn btn-success btn-default" id="Save" />
                            <input type="button" name="Save" value="Reset" class="btn btn-warning btn-default" onclick="location.href = '@Url.Action("NewInquiry", "Inquiry")    '" />

                        </div>
                    </div>
                </div>*@

    </fieldset>


    <script type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>

    <script src="~/Content/Validations/JqueryUi.js"></script>
  
    <script>
        var $j = jQuery.noConflict(true);
    </script>

    <script>
        function preventMultipleSubmissions() {
           // alert("Hello");
        }
        //$('#btnSubmit').on('click', function () {
        //    $(this).val('Please wait ...')
        //      .attr('disabled', 'disabled');
        //    $('#theform').submit();
        //});

    </script>
    <script type="text/javascript">

        $(document).ready(function () {
            @*var userid=@Session["userid"];
            setaccesscontrol(userid,"Inquiry", "NewInquiry","Add","btnSubmit","","");*@
            document.body.style.overflow = 'hidden';
            $(function () {
                $('.date-time-picker').datetimepicker({
                    format: 'd/m/Y',
                    timepicker:false
                });
            });
            $j("#customerName").autocomplete({
                source: function (request, response) {
                    var customer = new Array();
                    $.ajax({
                        url: "../Inquiry/getCustomername",
                        type: "POST",
                        dataType: "json",
                        data: { Prefix: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.Text,
                                    Id: item.Value
                                }
                            }));
                        }
                    });
                },
                minLength: 1,
                change: function (event, ui) {
                    $(this).val((ui.item ? ui.item.label : ""));
                  
                    if (ui.item==null) {
                        alert("Customer does not exist  Please add customer..!");
                        location.href = "../Customer/NewCustomer";
                    }
                   
                }
            });
            $j("#DieNumber").autocomplete({
                source: function (request, response) {
                    $("#customerName").val("");
                    $("#PartName").val("");
                    var customer = new Array();
                    $.ajax({
                        url: "../Inquiry/getDiaDetails",
                        type: "POST",
                        dataType: "json",
                        data: { DiaID: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.Text,
                                    Id: item.Value
                                }
                            }));
                        }
                    });
                },
                minLength: 1,
                change: function (event, ui) {
                   // $(this).val((ui.item ? ui.item.label : ""));

                    if (ui.item == null) {
                        // alert("Die does not exist  Please add customer..!");
                       
                        $("#customerName").removeAttr("readonly");
                        $("#PartName").removeAttr("readonly");
                        $("#hdn_diedescid").val("0");
                    }
                    else {
                        fetchdiadetails(ui.item.Id);
                    }

                }
            });
        });
        function fetchdiadetails(drpdia)
        {
           // var drpdia = $("#drp_dialist").val();
            if (drpdia != "") {
                $.ajax({
                    type: "POST",
                    url: "../Inquiry/fetchDiaDetails",
                    data: JSON.stringify({ dianumber: ' ' + drpdia + '' }),
                    contentType: "application/json;charset=utf-8",
                    success: function (data) {
                        $("#customerName").val(data[0].Name);
                       // $("#customerName").attr("readonly", "readonly");
                        $("#PartName").val(data[0].PartName);
                      //  $("#PartName").attr("readonly", "readonly");
                        $("#hdn_diedescid").val(data[0].Id);
                    },
                    error: function (err) {
                     
                        //alert(err);
                    }
                });

            }
        }
    </script>

}

