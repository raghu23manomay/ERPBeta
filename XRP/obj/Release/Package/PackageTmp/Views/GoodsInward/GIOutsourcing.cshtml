@model XRP.Models.ssmtbl_GoodsInwardModel
@using XRP.Global;
@using XRP.Models;
@{
    ViewBag.Title = "Oustsourcing Goods Inward";
    ViewBag.Active = "Stock";
    ViewBag.Active1 = "Goods Inward";
    Layout = "~/Views/Shared/_DesignLayout.cshtml";
}

<link href="~/Content/Validations/jquery-ui.css" rel="stylesheet" />

@using (Html.BeginForm("GIOutsourcing", "GoodsInward", FormMethod.Get, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)


    <fieldset>
        <!-- PAGE TITLE -->
        @*<div class="page-title">
            <h2><span class="fa fa-arrow-circle-o-left"></span>OUTSOURCING</h2>
        </div>

        <div class="row">
            <div class="col-md-12">

                <div class="col-md-9"></div>
                <div class="col-md-3">
                    <div class="form-group" style="text-align:center">
                        <input type="button" class="btn btn-info" value="All Goods Inward" onclick="location.href = '@Url.Action("AllGoodsInward", "GoodsInward")'" />
                    </div>
                </div>
            </div>
        </div>*@
        <header class="blue accent-3 relative">
            <div class="container-fluid text-white">
                @*<div class="row p-t-b-10 ">*@
                @*<div class="col">*@
                <h4>
                    <i class="icon-database"></i>
                    Goods Inward
                </h4>
                @*</div>*@
                @*</div>*@
                <div class="row justify-content-between">
                    <ul class="nav nav-material nav-material-white responsive-tab" id="v-pills-tab" role="tablist">
                        <li>
                            <a class="nav-link" href='@Url.Action("AllGoodsInward", "GoodsInward")'><i class="icon icon-home2"></i>All Goods Inward</a>

                        </li>
                        <li class="float-right">
                            <a class="nav-link active" href='#'><i class="icon icon-plus-circle"></i> Add New Outsourcing</a>
                        </li>
                    </ul>
                </div>
            </div>
        </header>

        @Html.HiddenFor(model => model.inward_type)
        @Html.HiddenFor(model => model.gin_char)
        @Html.HiddenFor(model => model.gin_id)

        <div class="container-fluid animatedParent animateOnce">
            <div class="animated fadeInUpShort">
                <form action="#">
                    <div class="card no-b  no-r">
                        <div class="card-body">
                            <div class="form-row mt-1">
                                <div class="form-group col-4 m-0">
                                    @Html.LabelFor(model => model.gin_number, new { @class = "Label" })

                                    @Html.TextBoxFor(model => model.gin_number, null, new { @class = "form-control r-0 light s-12", id = "gin_number", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(model => model.gin_number, null, new { @class = "alert-danger" })

                                </div>
                                <div class="form-group col-4 m-0">
                                    @Html.LabelFor(model => model.vendor_name, new { @class = "Label" })

                                    @Html.TextBoxFor(model => model.vendor_name, null, new { @class = "form-control r-0 light s-12", id = "vendor_name" })
                                    @Html.ValidationMessageFor(model => model.vendor_name, null, new { @class = "alert-danger" })
                                </div>
                                <div class="form-group col-4 m-0">
                                    @Html.LabelFor(model => model.vendor_po_no, new { @class = "Label" })

                                    @Html.TextBoxFor(model => model.vendor_po_no, null, new { @class = "form-control r-0 light s-12", id = "vendor_po_no" })
                                    @Html.ValidationMessageFor(model => model.vendor_po_no, null, new { @class = "alert-danger" })

                                </div>
                            </div>
                            <div class="form-row mt-1">
                                <div class="form-group col-4 m-0">
                                    @Html.LabelFor(model => model.dispatch_code, new { @class = "Label" })
                              
                                    @Html.TextBoxFor(model => model.dispatch_code, null, new { @class = "form-control r-0 light s-12", id = "dispatch_code" })
                                    @Html.ValidationMessageFor(model => model.dispatch_code, null, new { @class = "alert-danger" })
                                </div>

                                <div class="form-group col-4 m-0">
                                    @Html.LabelFor(model => model.date_of_arrival, new { @class = "Label" })

                                    @Html.TextBoxFor(model => model.date_of_arrival, "{0:dd-MMM-yyyy}", new { @class = "date-time-picker form-control r-0 light s-12", id = "date_of_arrival" })
                                    @Html.ValidationMessageFor(model => model.date_of_arrival, null, new { @class = "alert-danger" })
                                </div>
                                <div class="form-group col-4 m-0">
                                    @Html.LabelFor(model => model.invoice_no, new { @class = "Label" })
                                
                                @Html.TextBoxFor(model => model.invoice_no, null, new { @class = "form-control r-0 light s-12", id = "invoice_no" })
                                @Html.ValidationMessageFor(model => model.invoice_no, null, new { @class = "alert-danger" })
                            </div>
                                </div>
                            <div class="form-row mt-1">

                                <div class="form-group col-4 m-0">
                                    @Html.LabelFor(model => model.gate_entry_no, new { @class = "Label" })

                                    @Html.TextBoxFor(model => model.gate_entry_no, null, new { @class = "form-control r-0 light s-12 ", id = "gate_entry_no" })
                                    @Html.ValidationMessageFor(model => model.gate_entry_no, null, new { @class = "alert-danger" })

                                </div>

                                <div class="form-group col-4 m-0">
                                    @Html.LabelFor(model => model.last_gate_entry_no, new { @class = "Label" })

                                    @Html.TextBoxFor(model => model.last_gate_entry_no, null, new { @class = "form-control r-0 light s-12 ", id = "last_gate_entry_no" })
                                    @Html.ValidationMessageFor(model => model.last_gate_entry_no, null, new { @class = "alert-danger" })
                                </div>


                                <div class="form-group col-4 m-0">
                                    @Html.LabelFor(model => model.challan_no, new { @class = "Label" })

                                    @Html.TextBoxFor(model => model.challan_no, null, new { @class = "form-control r-0 light s-12 ", id = "challan_no" })
                                    @Html.ValidationMessageFor(model => model.challan_no, null, new { @class = "alert-danger" })

                                </div>
                                </div>
                            <div class="form-row mt-1">
                                <div class="form-group col-4 m-0">
                                    @Html.LabelFor(model => model.cost_center, new { @class = "Label" })

                                    @Html.DropDownListFor(model => model.cost_center, @ViewBag.CostCenterDet as IEnumerable<SelectListItem>, XRP.Global.DropDownSelection.DropDownSelect, new { @class = "form-control r-0 light s-12 ", id = "cost_center" })
                                    @Html.ValidationMessageFor(model => model.cost_center, null, new { @class = "alert-danger" })
                                </div>
                                <div class="form-group col-4 m-0">
                                    @Html.Label("Mode Of Transportation", new { @class = "Label" })
                                    <br>
                                    <div class="custom-control custom-radio custom-control-inline">
                                        <input type="radio" id="Road" name="mode_of_transportation" for="mode_of_transportation" class="custom-control-input">
                                        <label class="Label custom-control-label m-0" for="Road">Road</label>
                                    </div>
                                    <div class="custom-control custom-radio custom-control-inline">
                                        <input type="radio" id="Courier" name="mode_of_transportation" for="mode_of_transportation" class="custom-control-input">
                                        <label class="Label custom-control-label m-0" for="Courier">Courier</label>
                                    </div>
                                    <div class="custom-control custom-radio custom-control-inline">
                                        <input type="radio" id="HandCarriedBy" name="mode_of_transportation" for="mode_of_transportation" class="custom-control-input">
                                        <label class="Label custom-control-label m-0" for="HandCarriedBy">Hand Carried By</label>
                                    </div>
                                    @*<label class="btn btn-default">@Html.RadioButtonFor(model => model.mode_of_transportation, "Road")Road</label>

            <label class="btn btn-default">@Html.RadioButtonFor(model => model.mode_of_transportation, "Courier")Courier</label>

            <label class="btn btn-default">@Html.RadioButtonFor(model => model.mode_of_transportation, "Hand Carried By")Hand Carried By</label>*@
                                </div>


                                <div class="form-group col-4 m-0">
                                    @Html.LabelFor(model => model.vehicle_no, new { @class = "Label" })

                                    @Html.TextBoxFor(model => model.vehicle_no, null, new { @class = "form-control r-0 light s-12 ", id = "vehicle_no", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(model => model.vehicle_no, null, new { @class = "alert-danger" })

                                </div>
                            </div>

                           
                           

                            <div class="form-row mt-1">

                                <div class="form-group col-12 m-0">
                                    @Html.Label("Item Details", new { @class = "Label" })
                                    <table class="table table-bordered table-condensed">

                                        <thead>
                                            <tr>
                                                <th>PO</th>
                                                <th>Grade</th>
                                                <th>Section</th>
                                                <th>Order Qty</th>
                                                <th>Challan Qty</th>
                                                <th>Accepted Qty</th>
                                                <th>Rate/Per</th>
                                                <th>Shortfall</th>
                                                <th>Reason</th>
                                                <th>Heat Code</th>
                                                <th>Heat Number</th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody id="tblCustomerPODetails" style="display:none;">
                                            <tr>
                                                <td>
                                                    <input type="text" name="POM" class="form-control " id="POM" />
                                                </td>
                                                <td>
                                                    <input type="text" name="GradeM" class="form-control " id="GradeM" />
                                                </td>
                                                <td>
                                                    <input type="text" name="SectionM" class="form-control " id="SectionM" />
                                                </td>
                                                <td>
                                                    <input type="text" name="OQtyM" class="form-control " id="OQtyM" value="0" />
                                                </td>
                                                <td>
                                                    <input type="text" name="CQtyM" class="form-control " id="CQtyM" value="0" />
                                                </td>
                                                <td>
                                                    <input type="text" name="AQtyM" class="form-control " id="AQtyM" value="0" />
                                                </td>
                                                <td>
                                                    @Html.DropDownList("RatePerM", @ViewBag.RatePer as IEnumerable<SelectListItem>, XRP.Global.DropDownSelection.DropDownSelect, new { @class = ".chzn-select form-control ", id = "RatePerM" })
                                                </td>
                                                <td>
                                                    <input type="text" name="ShortfallM" class="form-control " id="ShortfallM" value="0" />
                                                </td>
                                                <td>
                                                    <input type="text" name="ReasonM" class="form-control " id="ReasonM" />
                                                </td>
                                                <td>
                                                    <input type="text" name="HeatCodeM" class="form-control " id="HeatCodeM" />
                                                </td>
                                                <td>
                                                    <input type="text" name="HeatNumberM" class="form-control " id="HeatNumberM" />
                                                </td>
                                                <td>
                                                    <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd"><span class="fa fa-arrows"></span></button>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>



                                </div>

                            </div>

                            <div class="form-row mt-1" style="max-height:150px; overflow:scroll;" id="processing">
                                <div class="col-md-12">

                                    <table class="table" id="maintable">

                                        <tbody>
                                            <tr></tr>
                                        </tbody>
                                    </table>

                                </div>

                            </div>


                            <div class="form-row mt-1">
                                <div class="form-group col-4 m-0">
                                    @Html.Label("Documents Received", new { @class = "Label" })
                                    @*<br>
                                    <div class="custom-control custom-radio custom-control-inline">
                                        <input type="radio" id="Road" name="mode_of_transportation" for="mode_of_transportation" class="custom-control-input">
                                        <label class="custom-control-label m-0" for="Road">Delivery Challan</label>
                                    </div>
                                    <div class="custom-control custom-radio custom-control-inline">
                                        <input type="radio" id="Courier" name="mode_of_transportation" for="mode_of_transportation" class="custom-control-input">
                                        <label class="custom-control-label m-0" for="Courier">Invoice</label>
                                    </div>
                                    <div class="custom-control custom-radio custom-control-inline">
                                        <input type="radio" id="Hand Carried By" name="Hand Carried By" for="mode_of_transportation" class="custom-control-input">
                                        <label class="custom-control-label m-0" for="Hand Carried By">Mill TC</label>
                                    </div>
                                    <div class="custom-control custom-radio custom-control-inline">
                                        <input type="radio" id="Hand Carried By" name="Hand Carried By" for="mode_of_transportation" class="custom-control-input">
                                        <label class="custom-control-label m-0" for="Hand Carried By">Weight Slip</label>
                                    </div>*@
                                    @*<table class="table table-hover">
                                        <tbody>
                                            @for (int i = 0; i < Model.ssmtbl_GoodsInward_DocReceivedModel.Count; i++)
                                            {
                                                <tr class="data-doc-received">
                                                    <td>
                                                        <label class="btn btn-default" style="width:100%; text-align:left">
                                                            @Html.CheckBoxFor(m => Model.ssmtbl_GoodsInward_DocReceivedModel[i].ischecked, new { @class = "btn btn-default ischecked" })
                                                            @Model.ssmtbl_GoodsInward_DocReceivedModel[i].doc_name
                                                        </label>
                                                        @Html.HiddenFor(m => Model.ssmtbl_GoodsInward_DocReceivedModel[i].doc_id, new { @class = "doc_id" })
                                                        @Html.HiddenFor(m => Model.ssmtbl_GoodsInward_DocReceivedModel[i].doc_name, new { @class = "doc_name" })
                                                    </td>
                                                </tr>
                                            }

                                        </tbody>
                                    </table>*@

                                    <select class="select2" name="RawMaterialTest[]" multiple="multiple">
                                        @for (int i = 0; i < Model.ssmtbl_GoodsInward_DocReceivedModel.Count; i++)
                                        {

                                            <option value="@Model.ssmtbl_GoodsInward_DocReceivedModel[i].doc_id" class="form-control r-0 light s-12">
                                                @Model.ssmtbl_GoodsInward_DocReceivedModel[i].doc_name
                                            </option>

                                            @*   @Html.HiddenFor(m => Model.ssmtbl_GoodsInward_DocReceivedModel[i].doc_id, new { @class = "doc_id" })
                                            @Html.HiddenFor(m => Model.ssmtbl_GoodsInward_DocReceivedModel[i].doc_name, new { @class = "doc_name" })*@
                                        }

                                    </select>

                                </div>


                                <div class="form-group col-4 m-0">
                                    @Html.LabelFor(model => model.if_no_specify, new { @class = "Label" })

                                    @Html.TextAreaFor(model => model.if_no_specify, new { @class = "form-control r-0 light s-12", id = "if_no_specify" })
                                    @Html.ValidationMessageFor(model => model.if_no_specify, null, new { @class = "alert-danger" })

                                </div>
                                <div class="form-group col-4 m-0">
                                    @Html.LabelFor(model => model.comment, new { @class = "Label" })

                                    @Html.TextAreaFor(model => model.comment, new { @class = "form-control r-0 light s-12", id = "comment" })
                                    @Html.ValidationMessageFor(model => model.comment, null, new { @class = "alert-danger" })
                                </div>

                            </div>
                        </div>

                    </div>
                    <div class="card-body">
                        <div class="form-row mt-1">
                            <div class="form-group col-10 m-0">

                            </div>

                            <div class="form-group col-2 m-0 custom-control-inline">

                                <div id="submitDiv" align="right">
                                    <button type="submit" class="btn btn-primary btn-sm" id="btnSubmit"><i class="icon-save mr-2"></i>Save</button>
                                </div>&nbsp;&nbsp;
                                <div id="loaderDiv" style="display:none;">
                                    <img src="~/NewCssAndTheme/img/ajax-loader.gif" />
                                </div>

                                <button type="reset" class="btn btn-success btn-sm" id="Reset"><i class="icon-refresh mr-2"></i>Reset</button>
                            </div>
                        </div>

                    </div>

                </form>
            </div>
        </div>

        @*<div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="col-md-2"><h2>Goods Inward</h2></div>
                    </div>
                    <div class="panel-body">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-4 control-label">
                                    @Html.LabelFor(model => model.gin_number, new { @class = "Label" })
                                </div>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.gin_number, null, new { @class = "form-control NoStar", id = "gin_number", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(model => model.gin_number, null, new { @class = "alert-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-4 control-label">
                                    @Html.LabelFor(model => model.vendor_name, new { @class = "Label" })
                                </div>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.vendor_name, null, new { @class = "form-control NoStar", id = "vendor_name" })
                                    @Html.ValidationMessageFor(model => model.vendor_name, null, new { @class = "alert-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-4 control-label">
                                    @Html.LabelFor(model => model.vendor_po_no, new { @class = "Label" })
                                </div>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.vendor_po_no, null, new { @class = "form-control NoStar", id = "vendor_po_no", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(model => model.vendor_po_no, null, new { @class = "alert-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-4 control-label">
                                    @Html.LabelFor(model => model.invoice_no, new { @class = "Label" })
                                </div>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.invoice_no, null, new { @class = "form-control NoStar", id = "invoice_no" })
                                    @Html.ValidationMessageFor(model => model.invoice_no, null, new { @class = "alert-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-4 control-label">
                                    @Html.LabelFor(model => model.date_of_arrival, new { @class = "Label" })
                                </div>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.date_of_arrival, "{0:dd-MMM-yyyy}", new { @class = "form-control NoStar datepicker", id = "date_of_arrival" })
                                    @Html.ValidationMessageFor(model => model.date_of_arrival, null, new { @class = "alert-danger" })
                                </div>
                            </div>

                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-4 control-label">
                                    @Html.LabelFor(model => model.dispatch_code, new { @class = "Label" })
                                </div>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.dispatch_code, null, new { @class = "form-control NoStar", id = "dispatch_code" })
                                    @Html.ValidationMessageFor(model => model.dispatch_code, null, new { @class = "alert-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4 control-label">
                                    @Html.LabelFor(model => model.gate_entry_no, new { @class = "Label" })
                                </div>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.gate_entry_no, null, new { @class = "form-control NoStar ", id = "gate_entry_no" })
                                    @Html.ValidationMessageFor(model => model.gate_entry_no, null, new { @class = "alert-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-4 control-label">
                                    @Html.LabelFor(model => model.last_gate_entry_no, new { @class = "Label" })
                                </div>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.last_gate_entry_no, null, new { @class = "form-control NoStar ", id = "last_gate_entry_no" })
                                    @Html.ValidationMessageFor(model => model.last_gate_entry_no, null, new { @class = "alert-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-4 control-label">
                                    @Html.LabelFor(model => model.challan_no, new { @class = "Label" })
                                </div>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.challan_no, null, new { @class = "form-control NoStar ", id = "challan_no" })
                                    @Html.ValidationMessageFor(model => model.challan_no, null, new { @class = "alert-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-4 control-label">
                                    @Html.LabelFor(model => model.cost_center, new { @class = "Label" })
                                </div>
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.cost_center, @ViewBag.CostCenterDet as IEnumerable<SelectListItem>, XRP.Global.DropDownSelection.DropDownSelect, new { @class = "form-control NoStar ", id = "cost_center" })
                                    @Html.ValidationMessageFor(model => model.cost_center, null, new { @class = "alert-danger" })
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="col-md-12"><h2>Mode of Transportation</h2></div>
                    </div>
                    <div class="panel-body">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label class="btn btn-default">@Html.RadioButtonFor(model => model.mode_of_transportation, "Road")Road</label>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label class="btn btn-default">@Html.RadioButtonFor(model => model.mode_of_transportation, "Courier")Courier</label>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="btn btn-default">@Html.RadioButtonFor(model => model.mode_of_transportation, "Hand Carried By")Hand Carried By</label>
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="form-group">
                                <div class="col-md-4 control-label">
                                    @Html.LabelFor(model => model.vehicle_no, new { @class = "Label" })
                                </div>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.vehicle_no, null, new { @class = "form-control NoStar ", id = "vehicle_no", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(model => model.vehicle_no, null, new { @class = "alert-danger" })
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>


        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-heading"><h2>Item Details</h2></div>
                <div class="panel-body">

                    <div class="row">
                        <div class="col-md-12">

                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>WO</th>
                                        <th>Grade</th>
                                        <th>Section</th>
                                        <th>Heat Code	</th>
                                        <th>Dispatch QTY</th>
                                        <th>Challan Qty</th>
                                        <th>Accepted Qty</th>
                                        <th>Unit</th>
                                        <th>Shortfall</th>
                                        <th>Reason</th>
                                        <th></th>
                                    </tr>
                                </thead>
                               
                            </table>

                        </div>

                    </div>


                    <div class="row" style="max-height:150px; overflow:scroll;" id="processing">
                        <div class="col-md-12">

                            <table class="table" id="maintable">

                                <tbody>
                                    <tr></tr>
                                </tbody>
                            </table>

                        </div>

                    </div>

                </div>
            </div>
        </div>



        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="col-md-12"><h2>Documents Received</h2></div>
                    </div>
                    <div class="panel-body">
                        <div class="col-md-6">
                            <div class="form-group">
                                <table class="table table-hover">
                                    <tbody>
                                        @for (int i = 0; i < Model.ssmtbl_GoodsInward_DocReceivedModel.Count; i++)
                                        {
                                            <tr class="data-doc-received">
                                                <td>
                                                    <label class="btn btn-default" style="width:100%; text-align:left">
                                                        @Html.CheckBoxFor(m => Model.ssmtbl_GoodsInward_DocReceivedModel[i].ischecked, new { @class = "btn btn-default ischecked" })
                                                        @Model.ssmtbl_GoodsInward_DocReceivedModel[i].doc_name
                                                    </label>
                                                    @Html.HiddenFor(m => Model.ssmtbl_GoodsInward_DocReceivedModel[i].doc_id, new { @class = "doc_id" })
                                                    @Html.HiddenFor(m => Model.ssmtbl_GoodsInward_DocReceivedModel[i].doc_name, new { @class = "doc_name" })
                                                </td>
                                            </tr>
                                        }

                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-4 control-label">
                                    @Html.LabelFor(model => model.if_no_specify, new { @class = "Label" })
                                </div>
                                <div class="col-md-8">
                                    @Html.TextAreaFor(model => model.if_no_specify, new { @class = "form-control", id = "if_no_specify" })
                                    @Html.ValidationMessageFor(model => model.if_no_specify, null, new { @class = "alert-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4 control-label">
                                    @Html.LabelFor(model => model.comment, new { @class = "Label" })
                                </div>
                                <div class="col-md-8">
                                    @Html.TextAreaFor(model => model.comment, new { @class = "form-control", id = "comment" })
                                    @Html.ValidationMessageFor(model => model.comment, null, new { @class = "alert-danger" })
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>



        
      
        <div class="row" id="btnDiv">
            <div class="col-md-12">

                <div class="form-group" style="text-align:center">
                    <div class="col-md-3">
                    </div>
                    <div class="col-md-3">
                        <div class="col-md-6" id="submitDiv">
                            <input type="button" name="Save" value="Save" class="btn btn-success btn-default" id="btnSubmit" />
                        </div>
                        <div class="col-md-6" id="loaderDiv" style="display:none;">
                            <img src="~/NewCssAndTheme/img/ajax-loader.gif" />
                        </div>
                    </div>
                    <div class="col-md-3 ">
                        <input type="button" name="Save" value="Reset" class="btn btn-warning btn-default" onclick="location.href = '@Url.Action("GIConsumables", "GoodsInward")    '" />
                    </div>
                    <div class="col-md-3">
                    </div>
                </div>
            </div>
        </div>*@
    

    </fieldset>




    <script type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>

    <script src="~/Content/Validations/JqueryUi.js"></script>
    <script>
        var $j = jQuery.noConflict(true);

        $j(document).ready(function () {

            if ($j('input[name=mode_of_transportation]').click(function () {
                var radiodata = $j('input[name=mode_of_transportation]:checked').val();
                if (radiodata == "Road") {
                            document.getElementById("vehicle_no").readOnly = false;
            }
            else {
                                document.getElementById("vehicle_no").readOnly = true;
                $j("#vehicle_no").val('');
            }
            }));



            $j("#vendor_name").autocomplete({
                source: function (request, response) {
                    var customer = new Array();
                    $j.ajax({
                        url: "../VendorPurchaseOrder/getVendorName",
                        type: "POST",
                        dataType: "json",
                        data: { Prefix: request.term },
                        success: function (data) {
                            response($j.map(data, function (item) {
                                return {
                                    label: item.Text,
                                    Id: item.Value
                                }
                            }));
                        }
                    });
                },
                minLength: 1,
                select: function (event, ui) {
                    $(this).val(ui.item.label);

                    $j.ajax({
                        url: "../VendorPurchaseOrder/getVendorDetails",
                        type: "POST",
                        dataType: "json",
                        data: { Id: ui.item.Id },
                        success: function (data) {
                            //console.log(data);
                            $j('#vendor_name').val(data.Name);
                        }
                    });


                }
            });


            $j("#dispatch_code").autocomplete({
                source: function (request, response) {
                    var customer = new Array();
                    var v_name = $j("#vendor_name").val();
                    var v_type = '@DeliveryChallanType.Outsourcing';
                    $j.ajax({
                        url: "../GoodsInward/getDispacthNO",
                        type: "POST",
                        dataType: "json",
                        data: { vendor_name: v_name, Prefix: request.term, vpo_type: v_type },
                        success: function (data) {
                            response($j.map(data, function (item) {
                                return {
                                    label: item.Text,
                                    Id: item.Value

                                }
                            }));
                        }
                    });
                },
                minLength: 1,
                select: function (event, ui) {
                    $(this).val(ui.item.label);
                    $("#maintable").empty();
                    $j.ajax({
                        url: "../GoodsInward/getDispacthNODetails",
                        type: "POST",
                        dataType: "json",
                        data: { Id: ui.item.Id },
                        success: function (data) {
                            console.log(data);

                            $j('#vendor_po_no').val(data.vendor_po_no);
                            var tr;
                            //Append each row to html table
                            for (var i = 0; i < data.ssmtbl_DeliveryChallan_DetailsModelList.length; i++) {

                                var rowCount = $j('.data-contact-person').length + 1;
                                var contactdiv = '<tr class="data-contact-person">' +
                        '<td><input type="text" name="wo' + rowCount + '" class="text-small  wo" value="' + data.ssmtbl_DeliveryChallan_DetailsModelList[i].wo + '" readonly="readonly"/></td>' +
                        '<td><input type="text" name="material_grade' + rowCount + '" class="text-small  material_grade" value="' + data.ssmtbl_DeliveryChallan_DetailsModelList[i].material_grade + '" readonly="readonly"/></td>' +
                        '<td><input type="text" name="section' + rowCount + '" class="text-small  section" value="' + data.ssmtbl_DeliveryChallan_DetailsModelList[i].section + '" readonly="readonly"/></td>' +
                        
                        '<td><input type="text" name="heat_code' + rowCount + '" class="text-small  heat_code" value="' + data.ssmtbl_DeliveryChallan_DetailsModelList[i].heat_code + '" readonly="readonly"/></td>' +
                       
                        '<td><input type="text" name="dipatchQty' + rowCount + '" class="text-small  dipatchQty" value="' + data.ssmtbl_DeliveryChallan_DetailsModelList[i].qty + '"/></td>' +
                        '<td><input type="text" name="challanQty' + rowCount + '" class="text-small  challanQty" value="' + data.ssmtbl_DeliveryChallan_DetailsModelList[i].qty + '" readonly="readonly"/></td>' +
                        '<td><input type="text" name="Acceptqty' + rowCount + '" class="text-small  Acceptqty" value="' + data.ssmtbl_DeliveryChallan_DetailsModelList[i].qty + '"/></td>' +
                        '<td><input type="text" name="units' + rowCount + '" class="text-small  units" value= "' + data.ssmtbl_DeliveryChallan_DetailsModelList[i].units + '" readonly="readonly"/></td>' +
                        '<td><input type="text" name="short_fall' + rowCount + '" class="text-small  short_fall" value="0" /></td>' +
                        '<td><input type="text" name="reason' + rowCount + '" class="text-small  reason" value="" ></td>' +
                        '<td><button type="button" id="btnDelete" class="deleteContact btn btn btn-danger btn-xs" onclick="Remove(this);"><span class="fa fa-arrows-h"></span></button></td>' +
                        '</tr>';

                                $j('#maintable').append(contactdiv); // Adding these controls to Main table class
                            }

                        }
                    });


                }
            });



            function Remove(button) {
                //Determine the reference of the Row using the Button.
                var row = $(button).closest("tr");
                var name = $("td", row).eq(0).html();
                if (confirm("Do you want to delete: ")) {

                    //Get the reference of the Table.
                    var table = $("#maintable")[0];

                    //Delete the Table row using it's Index.
                    table.deleteRow(row[0].rowIndex);

                    getNetTotal();
                }
            };


            function getAllGIData() {
                var data = [];

                var alldata = {
                    'gin_char': $j('#gin_char').val(),
                    'gin_id': $j('#gin_id').val(),
                    'gin_number': $j('#gin_number').val(),
                    'inward_type': $j('#inward_type').val(),
                    'vendor_name': $j('#vendor_name').val(),
                    'vendor_po_no': $j('#vendor_po_no').val(),
                    'date_of_arrival': $j('#date_of_arrival').val(),
                    'gate_entry_no': $j('#gate_entry_no').val(),
                    'last_gate_entry_no': $j('#last_gate_entry_no').val(),
                    'challan_no': $j('#challan_no').val(),
                    'invoice_no': $j('#invoice_no').val(),
                    'cost_center': $j('#cost_center').val(),
                    'mode_of_transportation': $j('input[name=mode_of_transportation]:checked').val(),
                    'vehicle_no': $j('#vehicle_no').val(),
                    'comment': $j('#comment').val(),
                    'if_no_specify': $j('#if_no_specify').val(),
                    'received_from': $j('#received_from').val(),
                    'supplier_name': $j('#supplier_name').val(),
                    'mill_tc_path': $j('#mill_tc_path').val(),
                    'dispatch_code': $j('#dispatch_code').val()

                }
                return alldata;
            }


            function getAllGIDetailsData() {

                var data = [];
                $j('tr.data-contact-person').each(function () {


                    var wo = $j(this).find('.wo').val();
                    var material_grade = $j(this).find('.material_grade').val();
                    var section = $j(this).find('.section').val();
                    var heat_code = $j(this).find('.heat_code').val();
                    var dipatchQty = $j(this).find('.dipatchQty').val();
                    var challanQty = $j(this).find('.challanQty').val();
                    var Acceptqty = $j(this).find('.Acceptqty').val();
                    var units = $j(this).find('.units').val();
                    var short_fall = $j(this).find('.short_fall').val();
                    var reason = $j(this).find('.reason').val();

                    if (!isNaN(short_fall) && short_fall > 0) {
                    }
                    else {
                        short_fall = '0';
                    }

                    var alldata = {
                        'wo': wo,
                        'grade': material_grade,
                        'section': section,
                        'heat_code': heat_code,
                        'dispatch_qty': dipatchQty,
                        'challan_qty': challanQty,
                        'accepted_qty': Acceptqty,
                        'unit': units,
                        'shortfall': short_fall,
                        'reason': reason
                    }
                    data.push(alldata);
                });
                //console.log(data);//
                return data;
            }


            function getAllGIDocReceivedData() {
                var data = [];
                $j('tr.data-doc-received').each(function () {
                    //alert('m');
                    var i_ischecked = false;

                    if ($j(this).find('.ischecked').prop("checked") == true) {
                        i_ischecked = true;
                    }

                    var i_doc_id = $j(this).find('.doc_id').val();//Bind to the item description with class i_desc01
                    var o_doc_name = $j(this).find('.doc_name').val();//Bind to the quantity with class qty01
                    var alldata = {
                        'doc_id': i_doc_id, 
                        'doc_name': o_doc_name, 
                        'ischecked': i_ischecked 
                    }
                    data.push(alldata);
                });
                //console.log(data);//
                return data;
            }




            $("#btnSubmit").click(function (e) {


                if ($j('#gin_number').val()) {
                    if ($j('#gate_entry_no').val()) {
                        if ($j('#vendor_name').val()) {

                            if ($j('#last_gate_entry_no').val()) {

                                if ($j('#vendor_po_no').val()) {

                                    if ($j('#challan_no').val()) {


                                        if ($j('#invoice_no').val()) {

                                            if ($j('#cost_center').val()) {


                                                if ($j('#date_of_arrival').val()) {

                                                    if ($j('#dispatch_code').val()) {

                                                        var newgin_number = $j('#gin_number').val();
                                                        var newUrl = '@Url.Action("UpdateGIOutsourcing", "GoodsInward")?id=' + newgin_number + '&successmsg=success';


                                                        var datas = JSON.stringify(getAllGIData());
                                                        var detailsdata = JSON.stringify(getAllGIDetailsData());
                                                        var datadocreceived = JSON.stringify(getAllGIDocReceivedData());

                                                        $j('#submitDiv').hide();
                                                        $j('#loaderDiv').show();

                                                        $.ajax({
                                                            url: '@Url.Action("GIOutsourcing", "GoodsInward")',
                                                            type: 'POST',
                                                            data: JSON.stringify({ 'gidata': datas, 'gidetailsdata': detailsdata, 'gidocreceived': datadocreceived }),
                                                            dataType: 'json',
                                                            contentType: 'application/json; charset=utf-8',
                                                            success: function (sdata) {
                                                                if (sdata.result == "Goods Inward Created Successfully!") {
                                                                    window.location.href = newUrl;
                                                                }
                                                                else {
                                                                    alert(sdata.result);
                                                                    $j('#submitDiv').show();
                                                                    $j('#loaderDiv').hide();
                                                                }
                                                            },
                                                            error: function () {
                                                                alert("Error while inserting data");
                                                                $j('#submitDiv').show();
                                                                $j('#loaderDiv').hide();
                                                            }
                                                        });

                                                    }
                                                    else {
                                                        alert('Please Enter Dispatch Code!');
                                                    }
                                                }
                                                else {
                                                    alert('Please Enter Date of arrival!');
                                                }
                                            }
                                            else {
                                                alert('Please Enter Cost Center!');
                                            }
                                        }
                                        else {
                                            alert('Please Enter Invoice Number!');
                                        }

                                    }
                                    else {
                                        alert('Please Enter Challan Number!');
                                    }
                                }
                                else {
                                    alert('Please Enter Vender PO Number!');
                                }
                            }
                            else {
                                alert('Please Enter Last Gate Entry No.!');
                            }
                        }
                        else {
                            alert('Please Enter Vendor Name!');
                        }
                    }
                    else {
                        alert('Please Enter Gate Entry Number!');
                    }
                }
                else {
                    alert('Please Enter GIN number!');
                }
            });


        });


    </script>


}
